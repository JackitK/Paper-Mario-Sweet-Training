%Status changes
%Every time you status an enemy, they get 50% more resistant to everything


%209 + actor pointer is set up at a different place



%80265FF4 = place where status ID is set

%Let's see if 209 + actor pointer works
%It is uninitialized data so yes

@Hook 1948D0
{
	PUSH	V0, V1
	LAW		V1, 800DC148
	BEQ		S0, V1 .skip	%make sure mario is not affected by the status change
	NOP
	LB		V0, 209 (S0)
	ADDIU	V0, V0, 1
	SB		V0, 209 (S0)
	.skip
	%is this 1 turn dizzy or 1 turn shrink?
	%S1 = status ID
	%S2 = status turns
	LI		V0, 1
	BNE		S2, V0, .notlow	%check this one first
	NOP
	LI		V0, 4
	BEQ		S1, V0, .islow
	NOP
	LI		V0, A
	BEQ		S1, V0, .islow
	NOP
	BEQ		R0, R0, .notlow
	NOP
	.islow
	LI		S2, 2
	.notlow
	POP		V0, V1
	%hooked over
	SLTI	V0, V0, A	%Restrict status turncount to be below 9
	J		80265FF8
	SB		S1, 210 (S0) %Store status ID
}

%fun fact: enemy poison does work (status ID 9)
%as long as the poison palettes are set up right
%enemy freezing half works (Visuals show up, but functions are incomplete and not working)

%80266C5C
%At this point, S2 is an actor pointer
%JAL	800299FC
%ADDIU	A0, R0, 64
%SLT	V0, S0, V0

%0 = yes status
%1 = no status

@Hook 19553C
{
	PUSH	RA, V1, A0
	%Mario and the partner can be statused infinitely many times, so skip this code if the pointers line up
	LAW		V1, 800DC148
	BEQ		S2, V1, .skip
	NOP
	LAW		V1, 800DC14C
	BEQ		S2, V1, .skip
	NOP	
	BEQ		R0, R0, .noskip
	NOP
	.skip
	ORI		V0, R0, 0
	POP		RA, V1, A0
	J 		80266C64
	SLT		V0, S0, V0
	.noskip
	%ADDIU	A0, R0, 64	
	%JAL		800299FC
	%NOP
	%No rng version: assume result of 0
	ORI		V0, R0, 0
	LB		V1, 209 (S2)
	ORI		A0, R0, 51`		%prevent off by 1 errors?
	MULT	V1, A0
	NOP		
	NOP		
	MFLO	V1 %put result in AT
	ADD		V0, V0, V1				
	POP		RA, V1, A0
	J 		80266C64
	SLT		V0, S0, V0
}

@Function 195544
{
	NOP
}

%ok I have to do the partner statusing stuff separately from this :(
%Fixed in the partner scripts





%more advanced status changes
%JackitK Note: Max HP line for partner orginally crashed the game, since code supporting the function was all over the place.
			%But I updated the line to fix the issue.
%sleep = Gives you +2 hp per turn, or 1/10 max hp per turn
%	If the target is hit, they will wake up and sleep is removed.

%Mario sleep
%I put this right next to the poison check
%170904 --> 80242024
@Hook 170DB4
{	
	PUSH 	  V0, S0, A0, A1, A2, A3, T0, T1, T2, T3, RA 	%Just to be safe
	LAW       V1, 800DC4DC				%battle status + 46C
	LI        V0, 15
	BNE       V1, V0, .nosleep			%Need to have a specific value here I think
	NOP
	LB        V1, 210 (S1)				%status ID
	LI        V0, 6
	BNE       V1, V0, .nosleep			%effect 6 = sleep
	NOP
	%Determine hp regain
	LABU	  A0, 8010F293
	%LHU       A0, 1BA (S1)				%max hp	(Not true, mario's max hp is not there) %A0, 1BA (S0) 
	ORI		  A2, R0, A
	DIV		  A0, A2
	NOP
	NOP
	MFLO	  A1
	ORI		  A2, R0, 2
	BGT		  A1, A2 .foundhp
	ORI		  S0, A1, 0
	ORI		  S0, A2, 0
	.foundhp
	%Add to your hp
	LBU       A1, 1B8 (S1)				%curr hp
	ADD		  A1, A1, S0
	BLT		  A1, A0 .effect
	NOP
	ORI		  A1, A0, 0
	.effect
	SB		  A1, 1B8 (S1)
	%store it into mario's hp directly in case the above one didn't work
	SAB		  A1, 8010F292
	%Cool effects
	%the code to calculate these positions in the real function is quite complicated, hopefully just adding the positions won't be too off
	LWC1      F26, 144 (S1)  
	LWC1      F20, 148 (S1)  
	LWC1      F22, 14C (S1)  
	%
	MFC1      A1, F26
	MFC1      A2, F20
	MFC1      A3, F22
	CLEAR     A0
	JAL       80071090
	SW        S0, 10 (SP)				%the number
	.nosleep
	POP		  V0, S0, A0, A1, A2, A3, T0, T1, T2, T3, RA
	LAW       V1, 800DC4DC				%battle status + 46C
	J		  802424DC
	LI        V0, 15
}

%Enemy sleep
%1718C0 --> 80242FE0
%  2F4:  LB        V1, 210 (S0)						%status id
%  2F8:  LI        V0, 9							%id 9 = poison
@Hook 171BB4
{
	
	PUSH 	  V0, S0, S1, A0, A1, A2, A3, T0, T1, T2, T3, RA 	%Just to be safe	(V0 is here because the thing that is 10 + SP gets overwritten below :P)
	LB        V1, 210 (S0)				%status ID
	LI        V0, 6
	BNE       V1, V0, .nosleep			%effect 6 = sleep
	NOP
	
	%Determine hp regain ()
	LBU       A0, 1B9 (S0)				%max hp
	ORI		  A2, R0, A
	DIV		  A0, A2
	NOP
	NOP
	MFLO	  A1
	ORI		  A2, R0, 2
	BGT		  A1, A2 .foundhp	%
	ORI		  S1, A1, 0
	ORI		  S1, A2, 0
	.foundhp
	%Add to your hp
	LBU       A1, 1B8 (S0)				%curr hp
	ADD		  A1, A1, S1
	BLT		  A1, A0 .effect
	NOP
	ORI		  A1, A0, 0
	.effect
	SB		  A1, 1B8 (S0)
	%Cool effects
	%the code to calculate these positions in the real function is quite complicated, hopefully just adding the positions won't be too off
	LWC1      F26, 144 (S0)  
	LWC1      F20, 148 (S0)  
	LWC1      F22, 14C (S0)  
	%
	MFC1      A1, F26
	MFC1      A2, F20
	MFC1      A3, F22
	CLEAR     A0
	JAL       80071090
	SW        S1, 10 (SP)				%the number
	.nosleep
	POP		  V0, S0, S1, A0, A1, A2, A3, T0, T1, T2, T3, RA
	LB        V1, 210 (S0)						%status id
	J		  802432DC
	LI        V0, 9								%id 9 = poison
	
}

%Mario sleep wake up
%DamageModifiers.patch

%Enemy sleep wake up

%Big problem
%Most sleep stuff executes before DoNormalHit / DoBurnHit and so sleep infliction will always fail

%194820 --> 80265F40

@Hook 194974
{
	%Set sleep token to 1
	LI		  A1, 1
	SB        A1, 19B (S0)	
	JAL       80266DAC
	LI        A1, 3
	J 		8026609C
	NOP
}
%1C8:  JAL       $Function_80266DAC
%1CC:  LI        A1, 6



%Resets status to 0 if hit while asleep
%Might mess up the effect stuff
%Maybe I should try to insert the cure status event in here
%	^	probably a bad idea, that would call DoRecover while we are still in the hit event
#export:Function:Battle $Function_WakeUp
{
	%copied the top of $HustleTarget, which was copied from VanishActor
	%yay reusing code
	PUSH		S0, S1, S2, S3, RA
	COPY      S2, A0
	LW        S1, C (S2)
	LW        S0, 148 (S2)
	JAL       ~Func:get_actor
	COPY      A0, S0
	COPY      S0, V0
	%now...	S0 = target actor (pointer)
	LB        V1, 210 (S0)				%status ID
	LI        V0, 6
	BNE       V1, V0, .nosleep			%effect 6 = sleep
	NOP
	%Now decrement the token
	LB        A0, 19B (S0)
	SLTI	  A1, A0, 1
	ADDI	  A0, A0, FFFF
	SB        A0, 19B (S0)
	BEQ		  A1, R0, .nosleep
	NOP
	%Not that simple, have to get rid of the big X
	%Funnily enough, it doesn't prevent the enemy from moving (unlike for mario)
	/%
	LH        A0, 436 (S0)
	SB		  R0, 19B (S0)
	SB		  R0, 210 (S0)
	JAL       80047898
	SB		  R0, 211 (S0)
	%/
	%Maybe copying from the hustle drink's status negating stuff will work >:(
	LB			V0, 210 (S0)
	BEQ			V0, R0, .o30
	NOP
	LH			A0, 436 (S0)
	SB			R0, 211 (S0)
	JAL			80047898					%play some status negation animation stuff?
	SB			R0, 210 (S0)
	.o30									%this part clears the anim stuff and status 0D - was missing before
	LB			V0, 216 (S0)
	BEQ			V0, R0, .o0DClear
	NOP
	LW			V0, 440 (S0)
	SB			R0, 217 (S0)
	SB			R0, 216 (S0)
	LW			V0, C (V0)
	SW			R0, 3C (V0)
	.o0DClear
	LB			V0, 212 (S0)
	BEQ			V0, R0, .o4C
	NOP
	LH			A0, 436 (S0)
	SB			R0, 213 (S0)
	JAL			800479A0
	SB			R0, 212 (S0)
	.o4C
	LB			V0, 214 (S0)
	BEQ			V0, R0, .o60
	NOP
	SB			R0, 215 (S0)
	SB			R0, 214 (S0)
	.o60
	LB			V0, 218 (S0)
	BEQ			V0, R0, .o74
	NOP
	SB			R0, 219 (S0)
	SB			R0, 218 (S0)
	.o74
	%
	.nosleep
	LI			V0, 2
	JPOP			S0, S1, S2, S3, RA	
}



%Wake up code version 2
%Hook into GetLastEvent
%	Double check that the events are either Hit, HitCombo, BurnHit, SpinSmashHit, FlipTrigger

%1AADC0 --> 8027C4E0
%Start of GetLastEvent

@Hook 1AAE00
{
	PUSH	S1, V0, A0, A1, A2, T0, T1, RA
	%Skip if is mario
	LAW		A2, 800DC148
	BEQ		A2, V0, .endcall
	NOP
	%
	LI		T0, .Event:Hit
	LB      A2, 1F0 (V0)
	BEQ		T0, A2, .docall
	NOP
	LI		T0, .Event:HitCombo
	BEQ		T0, A2, .docall
	NOP
	LI		T0, .Event:BurnHit
	BEQ		T0, A2, .docall
	NOP
	LI		T0, .Event:SpinSmashHit
	BEQ		T0, A2, .docall
	NOP
	LI		T0, .Event:FlipTrigger
	BEQ		T0, A2, .docall
	NOP
	BEQ		R0, R0, .endcall
	NOP
	.docall
	COPY    A0, S1				%Obtain script context	
	JAL		$Function_WakeUp
	NOP
	.endcall
	POP		S1, V0, A0, A1, A2, T0, T1, RA
	COPY    A0, S1
	J		8027C528
	LB      A2, 1F0 (V0)
}

%   40:  COPY      A0, S1
%   44:  LB        A2, 1F0 (V0)


%Full
/%
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  LW        S0, 0 (S0)
			%Hook here
   40:  COPY      A0, S1
   44:  LB        A2, 1F0 (V0)
			%End of hook here
   48:  JAL       ~Func:set_variable
   4C:  COPY      A1, S0
   50:  LW        RA, 18 (SP)
   54:  LW        S1, 14 (SP)
   58:  LW        S0, 10 (SP)
   5C:  LI        V0, 2
   60:  JR        RA
   64:  ADDIU     SP, SP, 20
%/


%paralyze = gives you +1 defense

%Reduce damage to mario
%	DamageModifiers.patch

%Reduce damage to enemies

@Hook 1A0CAC %if I recall correctly, hooks overwrite function overrides (IncreaseMaxHealth.patch has overrides here)	(though I had to eventually remove it because star rod doesn't like conflicting patches)
{
	PUSH	T0, T1, T2, T3
	LIO		T0, 800DC070
	%now execute paralysis check
	LB		T1, 210 (S3) 
	LI      T2, 5
	BNE		T1, T2, .noparalyze
	NOP
	BEQ		S0, R0, .noparalyze
	NOP
	ADDI	S0, S0, FFFF
	.noparalyze
	
	%Force it to be at least 0
	BGT		S0, R0, .end
	NOP
	COPY	S0, R0
	.end
	POP		T0, T1, T2, T3
	LBU		V0, 1B8 (S3) %hooked over
	J 		802723D4
	SUBU 	V0, V0, S0 %hooked over
}


/%
@Hook 1AD440
{
	PUSH	T0, T1, T2, T3
	LIO		T0, 800DC070
	%start checking stuff
	%now execute paralysis check
	LB		T1, 210 (S3) 
	LI      T2, 5
	BNE		T1, T2, .noparalyze
	NOP
	BEQ		A0, R0, .noparalyze
	NOP
	ADDI	A0, A0, FFFF
	.noparalyze	
	LW		T1, 19C (T0)	
	ANDI	T1, T1, 0001 %check 1 flag
	BEQ		T1, R0, .nolaststand
	ORI		T3, A0, 0
	ADDI	T3, A0, 1
	SRL		T3, A0, 1
	ORI		A0, T3, 0
	.nolaststand
	LW		T1, 19C (T0)	
	LUI		T2, 0002
	AND 	T1, T1, T2 %00020000
	BEQ		T1, R0, .nosuperlaststand
	ORI		T3, A0, 0
	ADDI	T3, A0, 3
	SRL		T3, T3, 2		%Round up by adding 3 then rounding down
	ORI		A0, T3, 0
	.nosuperlaststand		
	LW		T1, 19C (T0)	
	ANDI	T1, T1, 0004 %check 4 flag
	BEQ		T1, R0, .nocloud9
	ORI		T3, A0, 0
	ORI		T2, R0, 3
	SLL		T3, A0, 1
	DIV		T3, T2
	NOP		%apparently you can't have div and mflo next to each other
	NOP		%so... empty space
	MFLO	AT %put result in AT
	ADD		T3, AT, R0
	MFHI	AT %get remainder
	BEQ		AT, R0, .nocloud9
	NOP
	ADDI	T3, T3, 1 %if there is a remainder, add 1 to round up
	.nocloud9
	ORI		A0, T3, 0
	%check 01000000 flag
	LUI		T2, 0100
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosingleflag
	NOP
	SLTI	T2, A0, 2
	BNE		T2, R0, .nosingleflag
	NOP
	ADDIU	A0, R0, 1	%set damage to 1
	.nosingleflag
	%check 02000000 flag
	LUI		T2, 0200
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nocriticalflag
	NOP
	LHU		V0, 1B8 (S3) %hooked over
	BEQ		V0, A0, .nocriticalflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nocriticalflag
	%check 04000000 flag
	LUI		T2, 0400
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosubcriticalflag
	NOP
	LHU		V0, 1B8 (S3) %hooked over
	BLE		V0, A0, .nosubcriticalflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nosubcriticalflag
	%check 10000000 flag
	LUI		T2, 1000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nooddnegateflag
	NOP
	ANDI	T2, V0, 1
	BEQ		T2, R0, .nooddnegateflag
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.nooddnegateflag	
	%check 40000000 flag
	LUI		T2, 4000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .noultrasturdyflag
	NOP
	LHU		T2, 1BA (S3)
	LHU		V0, 1B8 (S3)
	BNE		T2, V0, .noultrasturdyflag		%Only at max hp
	NOP
	BGT		V0, A0, .noultrasturdyflag		%if curr hp > damage, skip (otherwise set damage to 0)
	NOP
	ADDIU	A0, R0, 0	%set damage to 0
	.noultrasturdyflag
	%check 80000000 flag
	LUI		T2, 8000
	LW		T1, 19C (T0)	
	AND		T1, T1, T2 
	BEQ		T1, R0, .nosturdyflag
	NOP
	LHU		T2, 1BA (S3)
	LHU		V0, 1B8 (S3)
	BNE		T2, V0, .nosturdyflag		%Only at max hp
	NOP
	BGT		V0, A0, .nosturdyflag		%if curr hp > damage, skip (otherwise set damage to max hp - 1)
	NOP
	ADDIU	A0, T2, 0	%set damage to maxhp - 1
	ADDI	A0, A0, FFFF
	.nosturdyflag	
	%Cheats
	LAB		T0, 8010F2A8
	BEQ		T0, R0, .nocheats
	NOP
	LAW 	T0, 800DC280
	ANDI	T0, T0, 0020
	BEQ		T0, R0, .nocheats
	NOP
	ORI		A0, R0, 63
	.nocheats	
	%Force it to be at least 0
	BGT		A0, R0, .end
	NOP
	COPY	A0, R0
	.end
	POP		T0, T1, T2, T3
	LHU		V0, 1B8 (S3) %hooked over
	J 		8027EB68
	SUBU 	V0, V0, A0 %hooked over
}
%/

%dizzy = can move but all attacks miss

%Find the conditional statement that determines if an enemy can move

/%
175B8C --> 802472AC
Function_btl_state_update_next_enemy
%/
@Function 175C8C
{
	LI        V0, 3	%checks status 3 twice, doesn't really change anything but removes the check for dizzy here
}
%100:  LI        V0, 4

%	check around 80247384
%	Called once per enemy, but stunned enemies skip their turn, so that code should be nearby


%Modify the status curing code to allow movement after status is gone (*This makes it act like shrink in that the turn count is 1 less than it should)

%Remove effect 4 (dizzy) from this conditional statement thing
%  1B4:  ADDIU     V0, V1, FFFD			%V0 = V1 - 3
%  1B8:  SLTIU     V0, V0, 6				%V0 < 9 ?	(effects 9 is poison, A is shrink, B is static...)
%		normally, detects statuses 3,4,5,6,7,8
%			all the normal stunning statuses + the unused status 3
%			Note that this means that all the statuses outside of that range act like shrink in that the final turn does not actually negate the enemy's turn
%1718C0 --> 80242FE0
@Hook 171A74
{
	PUSH	T0
	ORI		T0, R0, 4
	BEQ		T0, V0 .end
	ORI	 	V0, R0, 0
	ADDIU   V0, V1, FFFD	%normal code
	SLTIU   V0, V0, 6		%normal code
	.end
	POP		T0
	J		8024319C
	NOP
}

%I'd love to adjust posion so it lasts longer by default.  
%Would make the status more viable, despite the weak damage 
%But for now this is just a idea note... -JackitK


#export:Data $TempActorPointer
{
00000000
}

%Use some global pointer to temporarily store the pointer we need
%   0:  ADDIU     SP, SP, FFD8
%	4:  SW        S2, 18 (SP)
%1A5AD8 --> 802771F8
@Hook 1A5AD8
{
	SAW		  S2, $TempActorPointer
	ADDIU     SP, SP, FFD8
	J		  80277200
	SW        S2, 18 (SP)
}

@Function 1A5C50
{
	LAW		A0, $TempActorPointer
	LB		A0, 210 (A0)
	ORI		V0, R0, 4
	BEQ		A0, V0, .yes
	NOP
	.no
	COPY    A0, S0	%required
	J		802773A8
	ORI		V0, R0, 0	%probably not required
	.yes
	COPY    A0, S0	%required
	LI      S1, 5
	J		802773D0
	ORI		V0, R0, 0	%probably not required
	
}
%Jump to 1B0 if no
%or jump to 1D8 if yes
/%
  178:  JAL       ~Func:player_team_is_ability_active
  17C:  LI        A1, 21
  180:  BEQ       V0, R0, .o1B0
  184:  COPY      A0, S0
  188:  LB        V0, 1B8 (S0)
  18C:  SLTI      V0, V0, 6
  190:  BEQ       V0, R0, .o1B0
  194:  NOP
  198:  JAL       ~Func:rand_int
  19C:  LI        A0, 64
  1A0:  SLTI      V0, V0, 1E
  1A4:  BNEL      V0, R0, .o1D8
  1A8:  LI        S1, 5
  1AC:  COPY      A0, S0
  .o1B0
%/

%nop out some other checks
@Function 1A5BE0
{
	NOP
}

@Function 1A5BEC
{
	NOP
}

@Function 1A5BF4
{
	NOP
}



%Change the "Lucky" text to a "Miss" text
%Find 80071390

%1950D0 --> 802667F0
@Function 1951C0
{
BEQ       R0, R0, 40, %80266920?			
LI        A0, 4
}

%try again
@Hook 4C790
{
	ORI		T0, R0, 3
	BNE		A0, T0, .enda
	NOP
	ORI		A0, R0, 4
	.enda
	ORI		T0, R0, 8
	BNE		A0, T0, .endb
	NOP
	ORI		A0, R0, 9
	.endb
	ADDIU 	SP, SP, -30
	J		80071398
	SW		A0, 10 (SP)
}



%Now make it work for mario

%Reenable movement with dizzy
%	more complicated check than enemy dizziness
%	Has to be at the very start or before player turn

%The normal stun check
%	Statuses 9, A do not stop movement, but all other values do

%This check is performed at the very end of the status X animation, (the last call to the start player turn function?)

%Separate check to determine if Z button works
%	^ Not true! The check is the same code :P

%41A5A8 --> 802A5818
%	64:  LI        A0, 1	
@Function 41A60C
{
	CLEAR	A0
}


%	Seems to have a similar final check as the other statuses (but status 2 does not free turn)
%170904 --> 80242024
@Hook 17104C
{
	PUSH	V1
	LB      V0, 210 (S1)
	ORI		V1, R0, 4
	BNE		V0, V1, .normalend
	NOP
	POP		V1
	J		80242774
	NOP
	.normalend
	POP		V1
	LI		V0, 1
	SAW     V0, 8029F254
	J		80242774
	NOP
}
%  748:  SAW       V0, 8029F254		%Some kind of marker value that removes mario's turn?

%Potential thing to do later: Reenable blocking when dizzy
%	maybe not
%	It seems that this check is independent from the move check though (some statuses stop movement but not blocking)

%802586F4 <- could be associated with the dizzy removal effect

%80265DBC

%802588E0


%Change result of damage check to return 5 when dizzy
%	(I'll make items still work since they are technically not your attacks)


%1A0034 --> 80271754
@Hook 1A00A4
{
	LAW		  A0, 800DC148
	LB		  A0, 210 (A0)
	ORI		  V1, R0, 4
	BNE		  A0, V1, .normal
	NOP
	J		  80271924
	ORI		  V0, R0, 6			%Check result 5 doesn't really work
	.normal
	LW        A0, 7C (S1)
	J		  802717CC
	ANDI      V0, A0, 20
}
%70:  LW        A0, 7C (S1)		Illusory enemy check
%74:  ANDI      V0, A0, 20

%jump to 78 if no
%1D0 if yes (return 5)




%Stone cap makes stuff not work
%80277D74
@Hook 1A6654
{
	PUSH	RA, S0, S1, S2, S3
	LAW		S0, 800DC148
	LB		S1, 214 (S0)
	BEQ		S1, R0, .no
	NOP
	.yes
	POP		RA, S0, S1, S2, S3
	J		80277D7C
	ORI		V0, R0, 1
	.no
	POP		RA, S0, S1, S2, S3
	J		80277D7C
	ORI		V0, R0, 0
}

%force 100%
@Function 1A666C
{
	SLTI	V0, V0, 65
}