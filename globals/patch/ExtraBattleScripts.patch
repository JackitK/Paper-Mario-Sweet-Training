
/%

%Patch in Goomba King for Boss Fight???
%Patch for stuff tied to boss fights in this mod.  Specifically the elder fight.



%Village Elder Fight...

%Idle Animations for Boss
#new:IdleAnimations $IdleAnimations_80220800
{
	.Status:Normal    00630001
	.Status:Stone     00630000
	.Status:Sleep     00630008
	.Status:Poison    00630000
	.Status:Stop      00630000
	.Status:Static    00630000
	.Status:Paralyze  00630000
	.Status:Dizzy     00630007
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80220844
{
	.Status:Normal    00630004
	.Status:Stone     00630000
	.Status:Sleep     00630008
	.Status:Poison    00630000
	.Status:Stop      00630000
	.Status:Static    00630000
	.Status:Paralyze  00630000
	.Status:Dizzy     00630007
	.Status:End
}

%The boss's elemental strength's and weaknesses
#new:DefenseTable $DefenseTable_80220910
{
	.Element:Normal 00000000
	.Element:End
}

%Set the statuses the boss is weak to or resists...
#new:StatusTable $StatusTable_8022091C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison    100`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod    -1`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_802209C8
{
	00020020 01000000 E70F00FF $IdleAnimations_80220800 $DefenseTable_80220910 00000000 00000000 00000000 00000000
	00800020 02000000 005000FF 00000000 $DefenseTable_80220910 00000000 00000000 00000000 00000000
}

#new:Actor $GoombaKing
{
	% stats
	[Index]        92b
	[Level]        49`b
	[MaxHP]        30`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022091C
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_802209C8
	[Script]      $Script_Init_80220A38
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  80`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         56`b  80`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]   -6`b  38`b % dx dy
	[StatusIcon]   12`b  75`b % dx dy
}

%The scripts tied to actions of the boss

#new:Script $Script_Init_80220A38
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221530 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80220B50 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220F34 )
   3C:  %Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802229C4 ) %Remove opening cutscene script
   50:  Exec  $Script_80222D9C *Var0
   60:  Call  SetActorVar   ( .Actor:Self 00000004 *Var0 )
   78:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   90:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   A8:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   D8:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   F0:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  108:  Return
  110:  End
}

#new:Script $Script_Idle_80220B50
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Wait  *Var0
   3C:  Label  1
   48:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   5C:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  	Wait  1`
   78:  	Goto  1
   84:  EndIf
   8C:  Call  SetGoalToHome     ( .Actor:Self )
   9C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Add   *Var0  00000005
   C8:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   DC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220844 )
   F4:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  110:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  124:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220800 )
  13C:  Wait  20`
  148:  Label  2
  154:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  168:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  178:  	Wait  1`
  184:  	Goto  2
  190:  EndIf
  198:  Call  SetGoalToHome     ( .Actor:Self )
  1A8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1D8:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220844 )
  1F0:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  20C:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  220:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220800 )
  238:  Wait  80`
  244:  Goto  0
  250:  Return
  258:  End
}

#new:Script $Script_80220DB0
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   28:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  Set   *Var1  00000000
   54:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   70:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
   84:  Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
   A0:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
   C0:  Call  PlaySoundAtActor      ( .Actor:Self 000020B4 )
   D4:  Call  AddGoalPos    ( .Actor:Self  15`  0`  0` )
   F0:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  110:  Call  PlaySoundAtActor      ( .Actor:Self 000020B4 )
  124:  Call  AddGoalPos    ( .Actor:Self  5`  0`  0` )
  140:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  160:  Call  PlaySoundAtActor      ( .Actor:Self 000020B4 )
  174:  Return
  17C:  End
}

#new:Script $Script_HandleEvent_80220F34
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	Case  ==  .Event:HitCombo % 9
   70:  		SetConst  *Var0  00000001
   80:  		SetConst  *Var1  00630006
   90:  		ExecWait  DoNormalHit
   9C:  	Case  ==  .Event:Hit % A
   A8:  		SetConst  *Var0  00000001
   B8:  		SetConst  *Var1  00630006
   C8:  		ExecWait  DoNormalHit
   D4:  	Case  ==  .Event:BurnHit % E
   E0:  		SetConst  *Var0  00000001
   F0:  		SetConst  *Var1  0063000D
  100:  		SetConst  *Var2  0063000E
  110:  		ExecWait  DoBurnHit
  11C:  	Case  ==  .Event:SpinSmashHit % B
  128:  		SetConst  *Var0  00000001
  138:  		SetConst  *Var1  00630006
  148:  		ExecWait  DoSpinSmashHit
  154:  	Case  ==  .Event:ShockHit % 2F
  160:  		SetConst  *Var0  00000001
  170:  		SetConst  *Var1  00630006
  180:  		ExecWait  DoShockHit
  18C:  		SetConst  *Var0  00000001
  19C:  		SetConst  *Var1  00630006
  1AC:  		ExecWait  $Script_80220DB0
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00630004
  1D8:  		ExecWait  DoReturnHome
  1E4:  	Case  ==  .Event:ShockDeath % 26
  1F0:  		SetConst  *Var0  00000001
  200:  		SetConst  *Var1  00630006
  210:  		ExecWait  DoShockHit
  21C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  234:  		Kill  *Var0
  240:  		SetConst  *Var0  00000001
  250:  		SetConst  *Var1  00630006
  260:  		ExecWait  $Script_80222F50
  26C:  		Return
  274:  	CaseOR  ==  00000017 % 17
  280:  	CaseOR  ==  .Event:Immune % 19
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  00630001
  2AC:  		ExecWait  DoImmune
  2B8:  	EndCaseGroup
  2C0:  	Case  ==  .Event:Death % 20
  2CC:  		SetConst  *Var0  00000001
  2DC:  		SetConst  *Var1  00630006
  2EC:  		ExecWait  DoNormalHit
  2F8:  		Wait  10`
  304:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  31C:  		Kill  *Var0
  328:  		SetConst  *Var0  00000001
  338:  		SetConst  *Var1  00630006
  348:  		ExecWait  $Script_80222F50
  354:  		Return
  35C:  	Case  ==  .Event:BurnDeath % 24
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  0063000D
  388:  		SetConst  *Var2  0063000E
  398:  		ExecWait  DoBurnHit
  3A4:  		Wait  10`
  3B0:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  3C8:  		Kill  *Var0
  3D4:  		SetConst  *Var0  00000001
  3E4:  		SetConst  *Var1  0063000E
  3F4:  		ExecWait  $Script_80222F50
  400:  		Return
  408:  	Case  ==  .Event:SpinSmashDeath % 21
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00630006
  434:  		ExecWait  DoSpinSmashHit
  440:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  458:  		Kill  *Var0
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00630006
  484:  		ExecWait  $Script_80222F50
  490:  		Return
  498:  	Case  ==  .Event:SpikeContact % 2A
  4A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00630006 )
  4BC:  		Wait  20`
  4C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00630004 )
  4E0:  		Call  SetGoalToHome ( .Actor:Self )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  51C:  		Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
  534:  	Case  ==  .Event:EndFirstStrike % 35
  540:  		SetConst  *Var0  00000001
  550:  		SetConst  *Var1  00630001
  560:  		ExecWait  DoReturnHome
  56C:  		Call  HPBarToHome   ( .Actor:Self )
  57C:  	Case  ==  .Event:RecoverStatus % 31
  588:  		SetConst  *Var0  00000001
  598:  		SetConst  *Var1  00630001
  5A8:  		ExecWait  DoRecover
  5B4:  	Default
  5BC:  EndSwitch
  5C4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5D8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5EC:  Return
  5F4:  End
}

#new:Script $Script_TakeTurn_80221530
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   44:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   58:  Call  SetGoalToTarget   ( .Actor:Self )
   68:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   7C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   8C:  	Call  GetActorVar   ( .Actor:Enemy3 00000006 *Var0 )
   A4:  	If  *Var0  !=  00000000
   B4:  		Call  RandInt   ( 00000064 *Var1 )
   C8:  		If  *Var1  <  0000003C
   D8:  			Sub   *Var0  00000001
   E8:  			Call  SetActorVar   ( .Actor:Enemy3 00000006 *Var0 )
  100:  			ExecWait  $Script_80221CD4
  10C:  			Return
  114:  		EndIf
  11C:  	EndIf
  124:  EndIf
  12C:  ExecWait  $Script_80221680
  138:  Return
  140:  Return
  148:  End
}

#new:Script $Script_80221680
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  UseBattleCamPreset    ( 0000003F )
   34:  	Call  AddBattleCamZoom      (  -100` )
   44:  	Call  SetBattleCamOffsetZ   (  20` )
   54:  	Call  BattleCamTargetActor  ( .Actor:Self )
   64:  	Call  MoveBattleCamOver     (  30` )
   74:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   8C:  Else
   94:  	Call  UseBattleCamPreset    ( 0000003F )
   A4:  	Call  AddBattleCamZoom      (  -100` )
   B4:  	Call  BattleCamTargetActor  ( .Actor:Self )
   C4:  	Call  MoveBattleCamOver     (  20` )
   D4:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   EC:  EndIf
   F4:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  108:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  11C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  12C:  	Call  SetGoalToTarget   ( .Actor:Self )
  13C:  	Call  AddGoalPos        ( .Actor:Self  32`  0`  0` )
  158:  Else
  160:  	Call  SetGoalToTarget   ( .Actor:Self )
  170:  	Call  AddGoalPos        ( .Actor:Self  12`  0`  0` )
  18C:  EndIf
  194:  Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  1A8:  Call  SetAnimation  ( .Actor:Self 00000001 00630004 )
  1C0:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1D8:  Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
  1F0:  Wait  8`
  1FC:  Thread
  204:  	Call  PlaySoundAtActor  ( .Actor:Self 000020ED )
  218:  	Wait  10`
  224:  	Call  PlaySoundAtActor  ( .Actor:Self 000020ED )
  238:  EndThread
  240:  Call  SetAnimation  ( .Actor:Self 00000001 00630005 )
  258:  Set   *Var0  00000000
  268:  Loop  00000014
  274:  	Add   *Var0  00000012
  284:  	Call  SetActorYaw   ( .Actor:Self *Var0 )
  298:  	Wait  1`
  2A4:  EndLoop
  2AC:  Call  SetActorYaw       ( .Actor:Self  0` )
  2C0:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000002 00000010 )
  2E4:  Switch  *VarA
  2F0:  	CaseOR  ==  .HitResult:Miss % 6
  2FC:  	CaseOR  ==  .HitResult:Lucky % 5
  308:  		If  *VarA  ==  .HitResult:Lucky % 5
  318:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  33C:  		EndIf
  344:  		Call  SetAnimation  ( .Actor:Self 00000001 00630007 )
  35C:  		Set   *Var0  00000000
  36C:  		Loop  00000014
  378:  			Add   *Var0  00000012
  388:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  39C:  			Wait  1`
  3A8:  		EndLoop
  3B0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  3C4:  		Call  UseBattleCamPreset    ( 00000002 )
  3D4:  		Call  MoveBattleCamOver (  20` )
  3E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
  3FC:  		Call  SetGoalToHome ( .Actor:Self )
  40C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  420:  		Call  SetAnimation  ( .Actor:Self 00000001 00630004 )
  438:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  450:  		Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
  468:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  47C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  490:  		Return
  498:  	EndCaseGroup
  4A0:  EndSwitch
  4A8:  Call  UseBattleCamPreset    ( 00000002 )
  4B8:  Call  MoveBattleCamOver (  20` )
  4C8:  Wait  2`
  4D4:  Call  SetGoalToTarget   ( .Actor:Self )
  4E4:  Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 00000002 00000020 ) %update Kick attack damage
  50C:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  528:  Call  SetActorYaw       ( .Actor:Self  0` )
  53C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  558:  Call  SetAnimation      ( .Actor:Self 00000001 00630001 )
  570:  Switch  *VarA
  57C:  	Default
  584:  		Wait  20`
  590:  		Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
  5A8:  		Call  SetGoalToHome ( .Actor:Self )
  5B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  5CC:  		Call  SetAnimation  ( .Actor:Self 00000001 00630004 )
  5E4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  5FC:  		Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
  614:  EndSwitch
  61C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  630:  Call  UseIdleAnimation  ( .Actor:Self .True )
  644:  Return
  64C:  End
}

#new:Script $Script_80221CD4
{
    0:  Call  UseBattleCamPreset    ( 0000000F )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  MoveBattleCamOver (  40` )
   30:  Wait  15`
   3C:  Call  8024ECF8  ( 00000000 00000001 00000000 )
   54:  Call  SetAnimation      ( .Actor:Self 00000001 00630009 )
   6C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
   80:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   9C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
   D8:  Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
   EC:  Call  UseBattleCamPreset    ( 00000002 )
   FC:  Call  MoveBattleCamOver (  30` )
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 00630000 )
  124:  Thread
  12C:  	Call  StartRumble       ( 0000000B )
  13C:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  150:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  160:  		Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[4.0] )
  17C:  	EndIf
  184:  	Call  SetAnimation  ( .Actor:Self 00000001 00630001 )
  19C:  	Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFB0 0000007D 00000000 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFF1 00000087 00000000 00000055 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Call  PlayEffect    ( ~FX:DropLeaves:Random 00000064 00000067 00000000 00000046 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  268:  EndThread
  270:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000002 00000010 )
  294:  Switch  *VarA
  2A0:  	CaseOR  ==  .HitResult:Miss % 6
  2AC:  	CaseOR  ==  .HitResult:Lucky % 5
  2B8:  		Thread
  2C0:  			Wait  12`
  2CC:  			Call  PlaySoundAtPart   ( .Actor:Enemy3 00000003 00000301 )
  2E4:  		EndThread
  2EC:  		Thread
  2F4:  			Wait  10`
  300:  			Call  SetPartJumpGravity    ( .Actor:Enemy3 00000003 *Fixed[1.5] )
  318:  			Call  GetPartOffset ( .Actor:Enemy3 00000003 *Var0 *Var1 *Var2 )
  338:  			Call  FallPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  14` )
  35C:  			Sub   *Var0  0000000C
  36C:  			Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  10` .True )
  394:  			Sub   *Var0  00000007
  3A4:  			Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  7` .True )
  3CC:  			Loop  00000014
  3D8:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .False )
  3F4:  				Wait  1`
  400:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .True )
  41C:  				Wait  1`
  428:  			EndLoop
  430:  		EndThread
  438:  		Thread
  440:  			Wait  5`
  44C:  			Call  PlaySoundAtPart   ( .Actor:Enemy3 00000004 00000301 )
  464:  		EndThread
  46C:  		Thread
  474:  			Wait  3`
  480:  			Call  SetPartJumpGravity    ( .Actor:Enemy3 00000004 *Fixed[1.5] )
  498:  			Call  GetPartOffset ( .Actor:Enemy3 00000004 *Var0 *Var1 *Var2 )
  4B8:  			Call  FallPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  15` )
  4DC:  			Sub   *Var0  0000000C
  4EC:  			Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  10` .True )
  514:  			Sub   *Var0  00000007
  524:  			Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  7` .True )
  54C:  			Loop  00000014
  558:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .False )
  574:  				Wait  1`
  580:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .True )
  59C:  				Wait  1`
  5A8:  			EndLoop
  5B0:  		EndThread
  5B8:  		Thread
  5C0:  			Wait  17`
  5CC:  			Call  PlaySoundAtPart   ( .Actor:Enemy3 00000005 00000301 )
  5E4:  		EndThread
  5EC:  		Thread
  5F4:  			Wait  15`
  600:  			Call  SetPartJumpGravity    ( .Actor:Enemy3 00000005 *Fixed[1.5] )
  618:  			Call  GetPartOffset ( .Actor:Enemy3 00000005 *Var0 *Var1 *Var2 )
  638:  			Call  FallPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  17` )
  65C:  			Add   *Var0  0000000C
  66C:  			Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  10` .True )
  694:  			Add   *Var0  00000007
  6A4:  			Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  7` .True )
  6CC:  			Loop  00000014
  6D8:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .False )
  6F4:  				Wait  1`
  700:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .True )
  71C:  				Wait  1`
  728:  			EndLoop
  730:  		EndThread
  738:  		Wait  15`
  744:  		If  *VarA  ==  .HitResult:Lucky % 5
  754:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  778:  		EndIf
  780:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  794:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7A8:  		Return
  7B0:  	EndCaseGroup
  7B8:  EndSwitch
  7C0:  Thread
  7C8:  	Wait  12`
  7D4:  	Call  PlaySoundAtPart   ( .Actor:Enemy3 00000003 00000301 )
  7EC:  EndThread
  7F4:  Thread
  7FC:  	Wait  10`
  808:  	Call  SetPartJumpGravity    ( .Actor:Enemy3 00000003 *Fixed[1.5] )
  820:  	Call  GetPartOffset ( .Actor:Enemy3 00000003 *Var0 *Var1 *Var2 )
  840:  	Call  FallPartTo    ( .Actor:Enemy3 00000003 *Var0  35` *Var2  14` )
  864:  	Sub   *Var0  0000000C
  874:  	Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  10` .True )
  89C:  	Sub   *Var0  00000007
  8AC:  	Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  7` .True )
  8D4:  	Loop  00000014
  8E0:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .False )
  8FC:  		Wait  1`
  908:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .True )
  924:  		Wait  1`
  930:  	EndLoop
  938:  EndThread
  940:  Thread
  948:  	Wait  5`
  954:  	Call  PlaySoundAtPart   ( .Actor:Enemy3 00000004 00000301 )
  96C:  EndThread
  974:  Thread
  97C:  	Wait  3`
  988:  	Call  SetPartJumpGravity    ( .Actor:Enemy3 00000004 *Fixed[1.5] )
  9A0:  	Call  GetPartOffset ( .Actor:Enemy3 00000004 *Var0 *Var1 *Var2 )
  9C0:  	Call  FallPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  15` )
  9E4:  	Sub   *Var0  0000000C
  9F4:  	Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  10` .True )
  A1C:  	Sub   *Var0  00000007
  A2C:  	Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  7` .True )
  A54:  	Loop  00000014
  A60:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .False )
  A7C:  		Wait  1`
  A88:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .True )
  AA4:  		Wait  1`
  AB0:  	EndLoop
  AB8:  EndThread
  AC0:  Thread
  AC8:  	Wait  17`
  AD4:  	Call  PlaySoundAtPart   ( .Actor:Enemy3 00000005 00000301 )
  AEC:  EndThread
  AF4:  Thread
  AFC:  	Wait  15`
  B08:  	Call  SetPartJumpGravity    ( .Actor:Enemy3 00000005 *Fixed[1.5] )
  B20:  	Call  GetPartOffset ( .Actor:Enemy3 00000005 *Var0 *Var1 *Var2 )
  B40:  	Call  FallPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  17` )
  B64:  	Add   *Var0  0000000C
  B74:  	Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  10` .True )
  B9C:  	Add   *Var0  00000007
  BAC:  	Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  7` .True )
  BD4:  	Loop  00000014
  BE0:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .False )
  BFC:  		Wait  1`
  C08:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .True )
  C24:  		Wait  1`
  C30:  	EndLoop
  C38:  EndThread
  C40:  Wait  24`
  C4C:  Wait  2`
  C58:  Call  SetGoalToTarget   ( .Actor:Self )
  C68:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  C90:  Switch  *Var0
  C9C:  	Case  ==  0000000A % A
  CA8:  		Return
  CB0:  EndSwitch
  CB8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CCC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CE0:  Return
  CE8:  End
}

%Script tied to the opening cutscene
#new:Script $Script_NextTurn_802229C4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  802535B4  ( 00000000 )
   88:  			Call  UseBattleCamPreset    ( 0000000D )
   98:  			Call  BattleCamTargetActor  ( .Actor:Enemy1 )
   A8:  			Call  MoveBattleCamOver (  20` )
   B8:  			Wait  20`
   C4:  			Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
   D8:  			Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
   EC:  			Call  ActorSpeak        ( 000B00CB .Actor:Enemy1 00000001 0062000A 0062000A ) % Beat him up, King Goomba!!
  10C:  			Call  EnableIdleScript  ( .Actor:Enemy1 00000001 )
  120:  			Call  UseIdleAnimation  ( .Actor:Enemy1 .True )
  134:  			Call  UseBattleCamPreset    ( 0000000D )
  144:  			Call  BattleCamTargetActor  ( .Actor:Enemy2 )
  154:  			Call  MoveBattleCamOver (  10` )
  164:  			Wait  10`
  170:  			Call  UseIdleAnimation  ( .Actor:Enemy2 .False )
  184:  			Call  EnableIdleScript  ( .Actor:Enemy2 00000000 )
  198:  			Call  ActorSpeak        ( 000B00CC .Actor:Enemy2 00000001 0062010A 0062010A ) % We've got your back!
  1B8:  			Call  EnableIdleScript  ( .Actor:Enemy2 00000001 )
  1CC:  			Call  UseIdleAnimation  ( .Actor:Enemy2 .True )
  1E0:  			Call  UseBattleCamPreset    ( 0000000E )
  1F0:  			Call  BattleCamTargetActor  ( .Actor:Enemy0 )
  200:  			Call  MoveBattleCamOver (  20` )
  210:  			Wait  20`
  21C:  			Call  ActorSpeak        ( 000B00CD .Actor:Enemy0 00000001 00630009 00630009 ) % Leave him to me!
  23C:  			Call  SetActorVar       ( .Actor:Self 00000003 00000001 )
  254:  			Call  UseBattleCamPreset    ( 0000000E )
  264:  			Call  BattleCamTargetActor  ( .Actor:Player )
  274:  			Call  MoveBattleCamOver (  10` )
  284:  			Wait  10`
  290:  			Call  UseIdleAnimation  ( .Actor:Partner .False )
  2A4:  			Call  UseIdleAnimation  ( .Actor:Player .False )
  2B8:  			Call  SetActorYaw       ( .Actor:Player  180` )
  2CC:  			Call  SetAnimation      ( .Actor:Player 00000000 00010028 )
  2E4:  			Call  ActorSpeak        ( 000B00CE .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Hey Mario! I think maybe we ought to take out the  ...
  304:  			Call  SetAnimation      ( .Actor:Player 00000000 00010029 )
  31C:  			Wait  15`
  328:  			Call  SetActorYaw       ( .Actor:Player  0` )
  33C:  			Call  UseIdleAnimation  ( .Actor:Partner .True )
  350:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  364:  			Call  UseBattleCamPreset    ( 00000002 )
  374:  			Wait  20`
  380:  			Call  802535B4  ( 00000001 )
  390:  		EndIf
  398:  EndSwitch
  3A0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3C8:  Return
  3D0:  End
}

#new:Script $Script_80222D9C
{
    0:  Label  0
    C:  Wait  1`
   18:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  If  *Var0  !=  00630004
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   6C:  If  *Var0  !=  00630004
   7C:  	Goto  0
   88:  EndIf
   90:  Call  StartRumble   ( 00000001 )
   A0:  Call  8026DF88      ( FFFFFF81 00000001 *Var0 )
   B8:  If  *Var0  ==  00000001
   C8:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   E0:  	If  *Var0  ==  00000000
   F0:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  104:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  114:  			Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.2] )
  130:  		EndIf
  138:  	Else
  140:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  154:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  164:  			Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.7] )
  180:  		EndIf
  188:  	EndIf
  190:  EndIf
  198:  Goto  0
  1A4:  Return
  1AC:  End
}

%Script tied to boss's defeat
#new:Script $Script_80222F50
{
    0:  Call  8027D32C  ( FFFFFF81 )
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Set   *Var2  00000000
   34:  Call  SetAnimation      ( .Actor:Self *Var0 *Var1 )
   4C:  Wait  10`
   58:  Loop  00000018
   64:  	Call  SetActorYaw   ( .Actor:Self *Var2 )
   78:  	Add   *Var2  0000001E
   88:  	Wait  1`
   94:  EndLoop
   9C:  Call  SetActorYaw       ( .Actor:Self  0` )
   B0:  Call  GetActorPos       ( .Actor:Self *Var2 *Var3 *Var4 )
   CC:  Call  PlayEffect        ( ~FX:BigSmokePuff *Var2 *Var3 *Var4 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  110:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
  124:  Call  DropStarPoints    ( .Actor:Self )
  134:  Set   *Var3  00000000
  144:  Loop  0000000C
  150:  	Call  SetActorRotation  ( .Actor:Self *Var3 00000000 00000000 )
  16C:  	Add   *Var3  00000008
  17C:  	Wait  1`
  188:  EndLoop
  190:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
  1AC:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  1C4:  Wait  30`
  1D0:  Call  ActorExists       ( .Actor:Enemy1 *Var0 )
  1E4:  If  *Var0  ==  .True
  1F4:  	Call  GetActorHP    ( .Actor:Enemy1 *Var0 )
  208:  EndIf
  210:  If  *Var0  !=  00000000
  220:  	Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
  234:  	Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
  248:  	Call  ActorSpeak        ( 000B00CF .Actor:Enemy1 00000001 0062000B 0062000B ) % Oh no! It can't be! King Goomba!!
  268:  	Call  EnableIdleScript  ( .Actor:Enemy1 00000001 )
  27C:  	Call  UseIdleAnimation  ( .Actor:Enemy1 .True )
  290:  EndIf
  298:  Call  ActorExists   ( .Actor:Enemy2 *Var0 )
  2AC:  If  *Var0  ==  .True
  2BC:  	Call  GetActorHP    ( .Actor:Enemy2 *Var0 )
  2D0:  EndIf
  2D8:  If  *Var0  !=  00000000
  2E8:  	Call  UseIdleAnimation  ( .Actor:Enemy2 .False )
  2FC:  	Call  EnableIdleScript  ( .Actor:Enemy2 00000000 )
  310:  	Call  ActorSpeak        ( 000B00D0 .Actor:Enemy2 00000001 0062010B 0062010B ) % I don't believe it! He beat our King Goomba!
  330:  	Call  EnableIdleScript  ( .Actor:Enemy2 00000001 )
  344:  	Call  UseIdleAnimation  ( .Actor:Enemy2 .True )
  358:  EndIf
  360:  Call  RemoveActor   ( .Actor:Self )
  370:  Return
  378:  End
}

%Goomnut Tree
#new:IdleAnimations $IdleAnimations_802232D0
{
	.Status:Normal    00640000
	.Status:End
}

#new:DefenseTable $DefenseTable_802232DC
{
	.Element:Normal 00000000
	.Element:Hammer 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802232F0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022339C
{
	00800000 01000000 000A00FF 00000000 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
	00120000 02000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
	00120000 03000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
	00120000 04000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
	00120000 05000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
}

#new:Actor $GoomnutTree
{
	% stats
	[Index]        93b
	[Level]         1`b
	[MaxHP]        -1`b
	[Coins]         0`b
	[Flags]       02004004
	[StatusTable] $StatusTable_802232F0
	% ai
	[PartsCount]    5`s
	[PartsTable]  $PartsTable_8022339C
	[Script]      $Script_Init_80223488
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   0`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]          0`b   0`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]    0`b   0`b % dx dy
	[StatusIcon]    0`b   0`b % dx dy
}

#new:Script $Script_Init_80223488
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223804 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223678 )
   28:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80223688 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   84:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   B4:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000006 00000001 )
   E4:  Call  SetPartPos    ( .Actor:Self 00000002  10`  140`  10` )
  104:  Call  SetPartPos    ( .Actor:Self 00000003  -95`  140`  10` )
  124:  Call  SetPartPos    ( .Actor:Self 00000004  -115`  130`  0` )
  144:  Call  SetPartPos    ( .Actor:Self 00000005  -65`  118`  5` )
  164:  Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  184:  Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  1A4:  Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  1C4:  Call  SetPartTargetFlagBits ( .Actor:Self 00000001 00000004 .True )
  1E0:  Return
  1E8:  End
}

#new:Script $Script_Idle_80223678
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80223688
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastElement    ( *VarE )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  Switch  *Var0
   58:  	CaseOR  ==  .Event:HitCombo % 9
   64:  	CaseOR  ==  00000017 % 17
   70:  		ExecWait  $Script_80223D90
   7C:  	EndCaseGroup
   84:  	CaseOR  ==  .Event:Hit % A
   90:  	CaseOR  ==  .Event:Immune % 19
   9C:  		ExecWait  $Script_80223D90
   A8:  		ExecWait  $Script_80223DBC
   B4:  	EndCaseGroup
   BC:  	Case  ==  .Event:SpinSmashHit % B
   C8:  		ExecWait  $Script_80223D90
   D4:  		ExecWait  $Script_80223DBC
   E0:  	Case  ==  .Event:Death % 20
   EC:  		ExecWait  $Script_80223D90
   F8:  	Case  ==  .Event:SpinSmashDeath % 21
  104:  		ExecWait  $Script_80223D90
  110:  	Case  ==  .Event:SpikeContact % 2A
  11C:  	Case  ==  .Event:ShockHit % 2F
  128:  	Case  ==  .Event:EndFirstStrike % 35
  134:  	Default
  13C:  EndSwitch
  144:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .True )
  16C:  Return
  174:  End
}

#new:Script $Script_TakeTurn_80223804
{
    0:  Switch  *Var0
    C:  	Case  ==  00000006
   18:  		Return
   20:  EndSwitch
   28:  Switch  *Var0
   34:  	Case  ==  00000000
   40:  	Case  ==  0000000A
   4C:  EndSwitch
   54:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   68:  Call  UseIdleAnimation  ( .Actor:Self .True )
   7C:  Return
   84:  End
}

#new:Script $Script_80223890
{
    0:  SetTimescale  *Fixed[2.0]
    C:  UseIntBuffer  *Var0
   18:  Get4Int  *Var1 *Var2 *Var3 *Var4
   30:  Get1Int  *Var5
   3C:  Call  GetActorPos   ( .Actor:Player *Var6 *VarF *Var8 )
   58:  Call  PlaySound     ( 00000165 )
   68:  Call  PlaySound     ( 00000166 )
   78:  Thread
   80:  	Set   *Flag[00]  .False
   90:  	If  *Var1  !=  00000000
   A0:  		Wait  1`
   AC:  		Loop  00000005
   B8:  			UseIntBuffer  *Var1
   C4:  			Get1Int  *Var2
   D0:  			Loop  *Var2
   DC:  				Get1Int  *Var3
   E8:  				Call  $Function_80218B80    ( *Var3 *Fixed[0.1] *Fixed[0.2] *VarF 00000000 )
  108:  				If  *Flag[00]  ==  .False
  118:  					Set   *Flag[00]  .True
  128:  					Call  PlaySoundAtModel  ( *Var3 00000166 00000000 )
  140:  				EndIf
  148:  			EndLoop
  150:  			Wait  1`
  15C:  			UseIntBuffer  *Var1
  168:  			Get1Int  *Var2
  174:  			Loop  *Var2
  180:  				Get1Int  *Var3
  18C:  				Call  $Function_80218B80    ( *Var3 *Fixed[0.1] *Fixed[-0.2] *VarF 00000000 )
  1AC:  			EndLoop
  1B4:  			Wait  1`
  1C0:  		EndLoop
  1C8:  		UseIntBuffer  *Var1
  1D4:  		Get1Int  *Var2
  1E0:  		Loop  *Var2
  1EC:  			Get1Int  *Var3
  1F8:  			Call  TranslateModel    ( *Var3 00000000 00000000 00000000 )
  214:  		EndLoop
  21C:  		Wait  1`
  228:  	EndIf
  230:  EndThread
  238:  Thread
  240:  	Set   *Flag[00]  .False
  250:  	If  *Var2  !=  00000000
  260:  		Loop  00000005
  26C:  			UseIntBuffer  *Var2
  278:  			Get1Int  *Var3
  284:  			Loop  *Var3
  290:  				Get1Int  *Var4
  29C:  				Call  $Function_80218B80    ( *Var4 *Fixed[0.1] *Fixed[0.2] *VarF 00000000 )
  2BC:  				If  *Flag[00]  ==  .False
  2CC:  					Set   *Flag[00]  .True
  2DC:  					Call  PlaySoundAtModel  ( *Var4 00000165 00000000 )
  2F4:  				EndIf
  2FC:  			EndLoop
  304:  			Wait  1`
  310:  			UseIntBuffer  *Var2
  31C:  			Get1Int  *Var3
  328:  			Loop  *Var3
  334:  				Get1Int  *Var4
  340:  				Call  $Function_80218B80    ( *Var4 *Fixed[0.1] *Fixed[-0.2] *VarF 00000000 )
  360:  			EndLoop
  368:  			Wait  1`
  374:  		EndLoop
  37C:  		UseIntBuffer  *Var2
  388:  		Get1Int  *Var3
  394:  		Loop  *Var3
  3A0:  			Get1Int  *Var4
  3AC:  			Call  TranslateModel    ( *Var4 00000000 00000000 00000000 )
  3C8:  		EndLoop
  3D0:  		Wait  1`
  3DC:  	EndIf
  3E4:  EndThread
  3EC:  Thread
  3F4:  	If  *Var4  !=  00000000
  404:  		UseIntBuffer  *Var4
  410:  		Get1Int  *Var5
  41C:  		Loop  *Var5
  428:  			Get3Int  *Var6 *Var7 *Var8
  43C:  			Call  PlayEffect    ( ~FX:DropLeaves:Random *Var6 *Var7 *Var8 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  480:  		EndLoop
  488:  	EndIf
  490:  EndThread
  498:  Wait  15`
  4A4:  Return
  4AC:  End
}

#new:Unknown $???_80223D44
{
	00000002 00000021 00000024
}

#new:Unknown $???_80223D50
{
	00000003 00000026 00000027 00000028
}

#new:Unknown $???_80223D60
{
	00000002 FFFFFFF6 0000008C 00000000 00000064 0000008C 00000000
}

#new:Unknown $???_80223D7C
{
	$???_80223D44 $???_80223D50 00000000 $???_80223D60 00000000
}

#new:Script $Script_80223D90
{
    0:  Set   *Var0  $???_80223D7C
   10:  ExecWait  $Script_80223890
   1C:  Return
   24:  End
}

#new:Script $Script_80223DBC
{
    0:  Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFE7 00000078 00000000 0000005A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   44:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   5C:  If  *Var0  !=  00000000
   6C:  	Return
   74:  EndIf
   7C:  Call  UseBattleCamPreset    ( 0000000F )
   8C:  Call  BattleCamTargetActor  ( .Actor:Enemy0 )
   9C:  Wait  20`
   A8:  Call  SetActorVar   ( .Actor:Self 00000005 00000001 )
   C0:  Call  ActorExists   ( .Actor:Enemy0 *Var0 )
   D4:  If  *Var0  ==  .False
   E4:  	Call  SetGoalPos        ( .Actor:Self  10`  0`  10` )
  100:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  11C:  	Call  PlaySoundAtPart   ( .Actor:Self 00000002 00000301 )
  134:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.8] )
  14C:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[4.0] )
  164:  	Call  FallPartTo        ( .Actor:Self 00000002  10`  20`  10`  20` )
  188:  	Call  JumpPartTo        ( .Actor:Self 00000002  30`  20`  10`  10` .True )
  1B0:  	Call  JumpPartTo        ( .Actor:Self 00000002  40`  20`  10`  5` .True )
  1D8:  	Loop  00000014
  1E4:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  200:  		Wait  1`
  20C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  228:  		Wait  1`
  234:  	EndLoop
  23C:  	Return
  244:  EndIf
  24C:  Call  PlaySoundAtPart   ( .Actor:Self 00000002 00000301 )
  264:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.8] )
  27C:  Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[4.0] )
  294:  Call  GetStatusFlags    ( .Actor:Enemy0 *Var0 )
  2A8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  2B8:  	Call  FallPartTo    ( .Actor:Self 00000002  10`  80`  10`  10` )
  2DC:  Else
  2E4:  	Call  FallPartTo    ( .Actor:Self 00000002  10`  32`  10`  10` )
  308:  EndIf
  310:  Call  UseBattleCamPreset    ( 00000002 )
  320:  Call  MoveBattleCamOver (  30` )
  330:  Call  SetOwnerTarget    ( .Actor:Enemy0 00000002 )
  344:  Call  SetGoalToTarget   ( .Actor:Self )
  354:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
  37C:  Call  ActorExists       ( .Actor:Enemy1 *Var0 )
  390:  If  *Var0  ==  .False
  3A0:  	Call  GetPartOffset ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  3C0:  	Add   *Var0  00000041
  3D0:  	Set   *Var1  00000014
  3E0:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  3F8:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  420:  	Add   *Var0  0000000C
  430:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  458:  	Loop  00000014
  464:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  480:  		Wait  1`
  48C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  4A8:  		Wait  1`
  4B4:  	EndLoop
  4BC:  	Return
  4C4:  EndIf
  4CC:  Call  GetActorPos       ( .Actor:Enemy1 *Var0 *Var1 *Var2 )
  4E8:  Call  GetStatusFlags    ( .Actor:Enemy1 *Var3 )
  4FC:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  50C:  	Add   *Var1  00000032
  51C:  Else
  524:  	Add   *Var1  00000014
  534:  EndIf
  53C:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  554:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  57C:  Call  SetOwnerTarget    ( .Actor:Enemy1 00000001 )
  590:  Call  SetGoalToTarget   ( .Actor:Self )
  5A0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
  5C8:  Call  ActorExists       ( .Actor:Enemy2 *Var0 )
  5DC:  If  *Var0  ==  .False
  5EC:  	Call  GetPartOffset ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  60C:  	Add   *Var0  00000023
  61C:  	Set   *Var1  00000014
  62C:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  644:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  66C:  	Add   *Var0  0000000C
  67C:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  6A4:  	Loop  00000014
  6B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  6CC:  		Wait  1`
  6D8:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  6F4:  		Wait  1`
  700:  	EndLoop
  708:  	Return
  710:  EndIf
  718:  Call  GetActorPos       ( .Actor:Enemy2 *Var0 *Var1 *Var2 )
  734:  Call  GetStatusFlags    ( .Actor:Enemy2 *Var3 )
  748:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  758:  	Add   *Var1  00000032
  768:  Else
  770:  	Add   *Var1  00000014
  780:  EndIf
  788:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  7A0:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  7C8:  Call  SetOwnerTarget    ( .Actor:Enemy2 00000001 )
  7DC:  Call  SetGoalToTarget   ( .Actor:Self )
  7EC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
  814:  Call  GetPartOffset     ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  834:  Add   *Var0  00000014
  844:  Set   *Var1  00000014
  854:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  86C:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  894:  Add   *Var0  0000000C
  8A4:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  8CC:  Loop  00000014
  8D8:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  8F4:  	Wait  1`
  900:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  91C:  	Wait  1`
  928:  EndLoop
  930:  Return
  938:  End
}

#new:Function $Function_80218B10
{
    0:  ADDIU     SP, SP, FFD0
    4:  SDC1      F20, 18 (SP)
    8:  MTC1      A1, F20
    C:  SDC1      F22, 20 (SP)
   10:  MTC1      A2, F22
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 28 (SP)
   1C:  MTC1      A3, F24
   20:  SW        RA, 14 (SP)
   24:  JAL       ~Func:guMtxIdentF
   28:  COPY      S0, A0
   2C:  MUL.S     F22, F20, F22
   30:  NOP
   34:  MUL.S     F20, F20, F24
   38:  NOP
   3C:  LIF       F0, 1.0
   44:  NOP
   48:  SWC1      F0, 14 (S0)
   4C:  SWC1      F22, 10 (S0)
   50:  SWC1      F20, 18 (S0)
   54:  LW        RA, 14 (SP)
   58:  LW        S0, 10 (SP)
   5C:  LDC1      F24, 28 (SP)
   60:  LDC1      F22, 20 (SP)
   64:  LDC1      F20, 18 (SP)
   68:  JR        RA
   6C:  ADDIU     SP, SP, 30
}

#new:Function $Function_80218B80
{
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 5C (SP)
   10:  SW        S2, 58 (SP)
   14:  SW        S0, 50 (SP)
   18:  SDC1      F28, 80 (SP)
   1C:  SDC1      F26, 78 (SP)
   20:  SDC1      F24, 70 (SP)
   24:  SDC1      F22, 68 (SP)
   28:  SDC1      F20, 60 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_model_list_index_from_tree_index
   40:  COPY      A0, V0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  COPY      A0, S1
   50:  JAL       ~Func:get_float_variable
   54:  COPY      S2, V0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  COPY      A0, S1
   64:  JAL       ~Func:get_float_variable
   68:  MOV.S     F28, F0
   6C:  LW        A1, 0 (S0)
   70:  ADDIU     S0, S0, 4
   74:  COPY      A0, S1
   78:  JAL       ~Func:get_float_variable
   7C:  MOV.S     F26, F0
   80:  COPY      A0, S1
   84:  LW        A1, 0 (S0)
   88:  JAL       ~Func:get_float_variable
   8C:  MOV.S     F22, F0
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_model_from_list_index
   98:  MOV.S     F24, F0
   9C:  COPY      S1, V0
   A0:  LHU       V0, 0 (S1)
   A4:  ANDI      V0, V0, 400
   A8:  BNE       V0, R0, .o124
   AC:  ADDIU     S0, S1, 58
   B0:  MTC1      R0, F20
   B4:  MFC1      A2, F22
   B8:  MFC1      A1, F20
   BC:  MFC1      A3, F20
   C0:  JAL       ~Func:guTranslateF
   C4:  COPY      A0, S0
   C8:  MFC1      A1, F28
   CC:  MFC1      A2, F26
   D0:  MFC1      A3, F24
   D4:  JAL       $Function_80218B10
   D8:  ADDIU     A0, SP, 10
   DC:  ADDIU     A0, SP, 10
   E0:  COPY      A1, S0
   E4:  JAL       ~Func:guMtxCatF
   E8:  COPY      A2, S0
   EC:  ADDIU     A0, SP, 10
   F0:  NEG.S     F22, F22
   F4:  MFC1      A1, F20
   F8:  MFC1      A2, F22
   FC:  JAL       ~Func:guTranslateF
  100:  COPY      A3, A1
  104:  ADDIU     A0, SP, 10
  108:  COPY      A1, S0
  10C:  JAL       ~Func:guMtxCatF
  110:  COPY      A2, A1
  114:  LHU       V0, 0 (S1)
  118:  ORI       V0, V0, 1400
  11C:  BEQ       R0, R0, .o19C
  120:  SH        V0, 0 (S1)
        .o124
  124:  MTC1      R0, F20
  128:  MFC1      A2, F22
  12C:  MFC1      A1, F20
  130:  MFC1      A3, F20
  134:  JAL       ~Func:guTranslateF
  138:  ADDIU     A0, SP, 10
  13C:  ADDIU     A0, SP, 10
  140:  ADDIU     S0, S1, 58
  144:  COPY      A1, S0
  148:  JAL       ~Func:guMtxCatF
  14C:  COPY      A2, S0
  150:  MFC1      A1, F28
  154:  MFC1      A2, F26
  158:  MFC1      A3, F24
  15C:  JAL       $Function_80218B10
  160:  ADDIU     A0, SP, 10
  164:  ADDIU     A0, SP, 10
  168:  COPY      A1, S0
  16C:  JAL       ~Func:guMtxCatF
  170:  COPY      A2, S0
  174:  ADDIU     A0, SP, 10
  178:  NEG.S     F22, F22
  17C:  MFC1      A1, F20
  180:  MFC1      A2, F22
  184:  JAL       ~Func:guTranslateF
  188:  COPY      A3, A1
  18C:  ADDIU     A0, SP, 10
  190:  COPY      A1, S0
  194:  JAL       ~Func:guMtxCatF
  198:  COPY      A2, A1
        .o19C
  19C:  LW        RA, 5C (SP)
  1A0:  LW        S2, 58 (SP)
  1A4:  LW        S1, 54 (SP)
  1A8:  LW        S0, 50 (SP)
  1AC:  LDC1      F28, 80 (SP)
  1B0:  LDC1      F26, 78 (SP)
  1B4:  LDC1      F24, 70 (SP)
  1B8:  LDC1      F22, 68 (SP)
  1BC:  LDC1      F20, 60 (SP)
  1C0:  LI        V0, 2
  1C4:  JR        RA
  1C8:  ADDIU     SP, SP, 88
}
%/