%Copied over from Dark Star to read file name for secrets.  Update later according to the file names I want to make....


%800DBFB3 current file name
%SetMessageString (string, variable index)

#export:Data $CopiedFileName
{
	00000000 00000000
	00000000 00000000 %these 2 lines will never be written to
}

#export:Function $GetFileName
{
	PUSH t0, t1, t2, t3, s0, s1, ra
	LIO s0, 800DBFB3 %beginning of current file name
	LIO s1, $CopiedFileName
	SW r0, 0000 (s1)
	SW r0, 0004 (s1) %clear file name
	ORI t4, r0, 00FD %string terminator
	ORI t3, r0, 0000
	ORI t2, r0, 00F7 %value of space, end of string
	ORI t1, r0, 0008 %max amount of character spaces
	.loop
	LBU t0, 0000 (s0)
	BEQ t0, t2, .exit
	NOP
	SB t0, 0000 (s1)
	ADDIU s0, s0, 0001
	ADDIU s1, s1, 0001
	ADDIU t3, t3, 0001
	BEQ t1, t3, .exit %8 characters copied
	NOP
	BEQ r0, r0, .loop
	NOP
	.exit
	SB t4, 0000 (s1)
	POP t0, t1, t2, t3, s0, s1, ra
	JR RA
	NOP
}

%Note that it returns 0 on string equality
#export:Function $API_StrCmp {
	PUSH	RA, S0, S1
	COPY S1, A0
    LW s0, 000C (a0)
    LW a0, 0000 (s0) %arg 1 (string ptr)
    JAL $memCmp
    LW a1, 0004 (s0) %arg 2 (string ptr)

	COPY A0, S1
    LW a1, 0008 (s0) %arg 3 (var to store result to)
    JAL ~Func:set_variable
    DADDU a2, v0, r0 %move strcmp result to var

	POP		RA, S0, S1
    ORI v0, r0, 2 %return done status
    JR RA
	NOP
}

#export:Function $memCmp { %should return 0 if the same
    ORI a3, r0, 00FD %string terminator
    .loop
    LBU a2, 0000 (a0)
    ADDIU a0, a0, 1
    LBU v0, 0000 (a1)
    ANDI v1, a2, 00FF
    ANDI v0, v0, 00FF
    BEQ v1, v0, .sameValue
    ADDIU a1, a1, 0001
    BEQ r0, r0, .end
    SUBU v0, v1, v0
    .sameValue
    BNE a2, a3, .loop
    ADDU v0, r0, r0
    .end
    JR RA
    NOP
}

% Custom Strings for Sweet Expedition
#export:String $FileCode_Danger
{
	Danger[END]
}

#export:String $FileCode_Cheater
{
	Cheater[END]
}
#export:String $FileCode_TeaTime
{
	TeaTime[END]
}
#export:String $FileCode_NotSuper
{
	NotSuper[END]
}
#export:String $FileCode_Mercy
{
	Mercy[END]
}
#export:String $FileCode_Master
{
	Master[END]
}
#export:String $FileCode_FoxOnly
{
	FoxOnly[END]
}
#export:String $FileCode_Berserk
{
	Berserk[END]
}
#export:String $FileCode_MegaHard
{
	MegaHard[END]
}
#export:String $FileCode_AllSinks
{
	AllSinks[END]
}
#export:String $FileCode_SuperTea
{
	SuperTea[END]
}
#export:String $FileCode_FinalDes
{
	FinalDes[END]
}

/% %File strings from Dark Star
#export:String $FileCode_Cheater
{
	Cheater[END]
}

#export:String $FileCode_EasyMode
{
	EasyMode[END]
}

#export:String $FileCode_BadgeAnarchy
{
	Anarchy[END]
}

#export:String $FileCode_NewGamePlus
{
	NewGame[STAR][END]
}

#export:String $FileCode_NewGamePlusTwo
{
	GetGood[END]
}

#export:String $FileCode_ShyGuys
{
	ShyGuy[END]
}

#export:String $FileCode_ToadsOnly
{
	AllToads[END]
}

#export:String $FileCode_AntiGuy
{
	AntiGuy[END]
}

#export:String $FileCode_CantWin
{
	CantWin[END]
}

#export:String $FileCode_Easier
{
	Easier[END]
}

#export:String $FileCode_Sandbox
{
	Sandbox[END]
}

#export:String $FileCode_Berserk
{
	Berserk[END]
}

#export:String $FileCode_FastMode
{
	FastMode[END]
}

#export:String $FileCode_Biscuit
{
	Biscuit[END]
}

#export:String $FileCode_Berserk2
{
	Berserk2[END]
}
%/

%unnecessary

/%
#export:Function $FileCodeEnforcement
{
	PUSH 	RA, V0, V1, A0, A1, A2, A3
	LAB		A0, 800DBE00
	LI		A1,	2`
	BEQ		A0, A1, .dochecks
	NOP
	LI		A1,	4`
	BEQ		A0, A1, .dochecks
	NOP
	LI		A1,	5`
	BEQ		A0, A1, .dochecks
	NOP
	BEQ		R0, R0, .end
	NOP
	.dochecks
	JAL		$Has128Badges
	NOP
	BNE		V0, R0, .end
	NOP
	JAL		$Function_EquipAllBadges
	NOP
	.end
	POP 	RA, V0, V1, A0, A1, A2, A3
	JR		RA
	NOP
}
%/