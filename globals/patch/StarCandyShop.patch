

%Orginal Scripts....


%Script tied to the Raven selling the candy

#export:Script $CandySalesPitch
{
                   %Introduction
                   Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 002700A9 )
                  % The main talk the Bulb-Blub would have...
                  %Set the item and cost being traded...
                  Switch *GB_JAN04_CandySales_PurchaseCount
                      %For the first trade, set to the SlowGo badge for 1 Star Piece
                        Case < 1
                              Set *Var[C] 00000001
                              Set *Var[D] .Item:DDownPound
                        % Second trade has two different scenarios: Save Kolorado = Item; Ignore Kolorado = Close Call
                        Case < 2
                              %If Kolorado got saved, skip this sequence all together by updating the count to the 3rd step
                              If  *GF_JAN01_SavedKolorado  ==  .True
                                    Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270108 ) % Already have Close call dialouge
                                    Add   *GB_JAN04_CandySales_PurchaseCount  00000001
                                    Set *Var[C] 00000001
                                    Set *Var[D] .Item:BigCocoboom
                              
                              % If he didn't get saved update cost and vaule for Close Call badge
                              Else
                                    Set *Var[C] 00000002
                                    Set *Var[D] .Item:CloseCall
                        Case < 3
                              Set *Var[C] 00000001
                              Set *Var[D] .Item:TastyTonic
                        Case < 4
                              % Pause if all the kids have not been saved yet
                              If  *GB_StoryProgress  <  .Story:Ch5_YoshiChildrenAreMissing
                                    Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270109 ) % Ahh... Did you change your mind? I see...
                                    Return
                              EndIf
                              % Otherwise set value and resume script like normal.
                              Set *Var[C] 00000003
                              Set *Var[D] .Item:SuperJump
                        Case < 5
                              Set *Var[C] 00000001
                              Set *Var[D] .Item:BigCocoboom
                        Case < 6
                              Set *Var[C] 00000001
                              Set *Var[D] .Item:SlowGo
                      %After all item trades are done, trade 1 star piece for 50 coins
                      Default
                            Set *Var[0] 1
                            Set *Var[1] .Item:ExpeditionCard
                
                  EndSwitch
                  %Set the purchase cost to an int
                  %Set *VarC *GB_JAN04_CandySales_PurchaseCost

                 

                  %Check the players star pieces against the amount
                  Call  $CheckStarCandy    ( *VarA )
                  If  *VarA  <  *VarC % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                      Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270104 ) % Ahhh... I can tell you don't have any Star Pieces. ...
                      Return
                  EndIf
                  %Determine dialouge based on purchase count...
                  Switch *GB_JAN04_CandySales_PurchaseCount
                      %For the first trade, set to the DDown badge for 1 Star Piece
                      Case < 1
                              Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270113 ) % D Down dialouge
                              %Ask the player if they want to trade...
                              Call  ShowChoice    ( 001E0014 ) % Yes No
                              %If Yes is picked...
                              If *Var0  ==  00000000
                                    %Check to see if they have enough...
                                    %Check the player's star pieces against the amount
                                    Call  $CheckStarCandy    ( *VarA )
                                    % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                                    If  *VarA  <  *VarC
                                          Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % you don't have any Star Pieces. ...
                                          Return
                                    Else
                                          %Take away a candy star in exchange for a coin...
                                          Call AddStarPieces ( -1)
                                          Call AddBadge ( .Item:DDownPound 0 )
                                          Call  ShowGotItem   ( .Item:DDownPound .True 00000000 )
                                          Call  SpeakToPlayer   ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % No take-backs!
                                          %Update the purchase count
                                          If  *GB_JAN04_CandySales_PurchaseCount  <  0000000A
                                                Add   *GB_JAN04_CandySales_PurchaseCount  00000001
                                          EndIf
                                    EndIf
                                    Return
                              %If No is picked, play the rejected offer dialouge...
                              Else
                                    Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
                                    Return
                              EndIf

                        % 2nd Sale has two difference scenarios depending on if you saved Kolorado or not when attacked on the beach.
                        Case < 2
                              %If you did help, set to the Super Coco Bomb item for 1 Star Piece
                              If  *GF_JAN01_SavedKolorado  ==  .True
                                    /%
                                    Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270114 ) % Coco Bomb dialouge
                                    %Ask the player if they want to trade...
                                    Call  ShowChoice    ( 001E0014 ) % Yes No
                                    %If Yes is picked...
                                    If *Var0  ==  00000000
                                          %Check to see if they have enough...
                                          %Check the player's star pieces against the amount
                                          Call  $CheckStarCandy    ( *VarA )
                                          % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                                          If  *VarA  <  *VarC
                                                Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % you don't have any Star Pieces. ...
                                                Return
                                          Else
                                                %Add a check to assure the player has space before trading the item...
                                                %Insert If statement here...
                                                %Take away a candy star in exchange for a coin...
                                                Call AddStarPieces ( -1)
                                                Call AddItem ( .Item:BigCocoboom 0 )
                                                %Call AddItem ( .Item:GrandKaboom 0 )
                                                %Call  ShowGotItem   ( .Item:GrandKaboom .True 00000000 )
                                                Call  ShowGotItem   ( .Item:BigCocoboom .True 00000000 )
                                                Call  SpeakToPlayer   ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % No take-backs!
                                                %Update the purchase count
                                                If  *GB_JAN04_CandySales_PurchaseCount  <  0000000A
                                                      Add   *GB_JAN04_CandySales_PurchaseCount  00000001
                                                EndIf
                                          EndIf
                                          Return
                                         
                                    %If No is picked, play the rejected offer dialouge...
                                    Else
                                          Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
                                          Return
                                    EndIf
                                     %/
                              %Otherwise the Close Call badge will "mysteriously" show up in his wears instead
                              Else
                                    Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270115 ) % Close Call dialouge
                                    %Ask the player if they want to trade...
                                    Call  ShowChoice    ( 001E0014 ) % Yes No
                                    %If Yes is picked...
                                    If *Var0  ==  00000000
                                          %Check to see if they have enough...
                                          %Check the player's star pieces against the amount
                                          Call  $CheckStarCandy    ( *VarA )
                                          % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                                          If  *VarA  <  *VarC
                                                Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % you don't have any Star Pieces. ...
                                                Return
                                          Else
                                                %Add a check to assure the player has space before trading the item...
                                                %Insert If statement here...
                                                %Do the trade...
                                                Call AddStarPieces ( -2)
                                                Call AddBadge ( .Item:CloseCall 0 )
                                                Call  ShowGotItem   ( .Item:CloseCall .True 00000000 )
                                                Call  SpeakToPlayer   ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % No take-backs!
                                                %Update the purchase count
                                                If  *GB_JAN04_CandySales_PurchaseCount  <  0000000A
                                                      Add   *GB_JAN04_CandySales_PurchaseCount  00000001
                                                EndIf
                                          EndIf
                                          Return
                                    %If No is picked, play the rejected offer dialouge...
                                    Else
                                          Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
                                          Return
                                    EndIf
                              EndIf

                        %For the 3rd trade, set a Dizzy Sweet and Static Herb for 1 Star Candy
                        Case < 3
                              Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270116 ) % Tea Items Dialouge
                                    %Ask the player if they want to trade...
                                    Call  ShowChoice    ( 001E0014 ) % Yes No
                                    %If Yes is picked...
                                    If *Var0  ==  00000000
                                          %Check to see if they have enough...
                                          %Check the player's star pieces against the amount
                                          Call  $CheckStarCandy    ( *VarA )
                                          % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                                          If  *VarA  <  *VarC
                                                Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % you don't have any Star Pieces. ...
                                                Return
                                          Else
                                                %Add a check to assure the player has space before trading the item...
                                          Call $checkTotalItemsInInventory( *Var0 )
                                          %If item count is 8 or less...
                                          If (*Var0 <= 8)
                                                %Take away a candy star in exchange for item...
                                                Call AddStarPieces ( -1)
                                                Call AddItem ( .Item:TastyTonic 0 )
                                                Call  ShowGotItem   ( .Item:TastyTonic .True 00000000 )
                                                Call AddItem ( .Item:VoltShroom 0 )
                                                Call  ShowGotItem   ( .Item:VoltShroom  .True 00000000 )
                                                Call  SpeakToPlayer   ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % No take-backs!
                                                %Update the purchase count
                                                If  *GB_JAN04_CandySales_PurchaseCount  <  0000000A
                                                      Add   *GB_JAN04_CandySales_PurchaseCount  00000001
                                                EndIf
                                          Else
                                                %Otherwise play text saying they have too many things...maybe make a flag that will allow Mario to get the item from him later...
                                                Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 0027011B ) % On second thought your pockets are bloated...
                                          EndIf
                                          EndIf
                                          Return
                                         
                                    %If No is picked, play the rejected offer dialouge...
                                    Else
                                          Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
                                          Return
                                    EndIf
                          
                        %For the 4th trade, set to the Aerial Stomp badge for 3 Star Candies
                        Case < 4

                              % Otherwise resume trade quest
                              Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270111 ) % Arieal Stomp dialouge
                              %Ask the player if they want to trade...
                              Call  ShowChoice    ( 001E0014 ) % Yes No
                              %If Yes is picked...
                              If *Var0  ==  00000000
                                    %Check to see if they have enough...
                                    %Check the player's star pieces against the amount
                                    Call  $CheckStarCandy    ( *VarA )
                                    % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                                    If  *VarA  <  *VarC
                                          Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % you don't have any Star Pieces. ...
                                    Return
                                    Else
                                          %Take away a candy star in exchange for a coin...
                                          Call AddStarPieces ( -3)
                                          Call AddBadge ( .Item:SuperJump 0 )
                                          Call  ShowGotItem   ( .Item:SuperJump .True 00000000 )
                                          Call  SpeakToPlayer   ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % No take-backs!
                                          %Update the purchase count
                                          If  *GB_JAN04_CandySales_PurchaseCount  <  0000000A
                                                Add   *GB_JAN04_CandySales_PurchaseCount  00000001
                                          EndIf
                                    EndIf
                                    Return
                              %If No is picked, play the rejected offer dialouge...
                              Else
                                    Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
                                    Return
                              EndIf
                        %For the 5th trade, set an Egg Missile/Grand Chocoakoom for 1 Star Candy
                        Case < 5
                        Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270114 ) % Coco Bomb dialouge
                              %Ask the player if they want to trade...
                              Call  ShowChoice    ( 001E0014 ) % Yes No
                              %If Yes is picked...
                              If *Var0  ==  00000000
                                    %Check to see if they have enough...
                                    %Check the player's star pieces against the amount
                                    Call  $CheckStarCandy    ( *VarA )
                                    % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                                    If  *VarA  <  *VarC
                                          Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % you don't have any Star Pieces. ...
                                          Return
                                    Else
                                          %Add a check to assure the player has space before trading the item...
                                          Call $checkTotalItemsInInventory( *Var0 )
                                          %If item count is 9 or less...
                                          If (*Var0 <= 9)
                                                %Take away a candy star in exchange for item...
                                                Call AddStarPieces ( -1)
                                                Call AddItem ( .Item:BigCocoboom 0 )
                                                Call  ShowGotItem   ( .Item:BigCocoboom .True 00000000 )
                                                Call  SpeakToPlayer   ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % No take-backs!
                                                %Update the purchase count
                                                If  *GB_JAN04_CandySales_PurchaseCount  <  0000000A
                                                      Add   *GB_JAN04_CandySales_PurchaseCount  00000001
                                                EndIf
                                          Else
                                                %Otherwise play text saying they have too many things...maybe make a flag that will allow Mario to get the item from him later...
                                                Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 0027011B ) % On second thought your pockets are bloated...
                                          EndIf
                                    EndIf
                                    Return
                                   
                              %If No is picked, play the rejected offer dialouge...
                              Else
                                    Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
                                    Return
                              EndIf
                         %For the 6th trade, set to the Slow Go Badge for 1 Star Candy
                        Case < 6

                              % Otherwise resume trade quest
                              Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270110 ) % Slow Go dialouge
                              %Ask the player if they want to trade...
                              Call  ShowChoice    ( 001E0014 ) % Yes No
                              %If Yes is picked...
                              If *Var0  ==  00000000
                                    %Check to see if they have enough...
                                    %Check the player's star pieces against the amount
                                    Call  $CheckStarCandy    ( *VarA )
                                    % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                                    If  *VarA  <  *VarC
                                          Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % you don't have any Star Pieces. ...
                                    Return
                                    Else
                                          %Take away a candy star in exchange for a coin...
                                          Call AddStarPieces ( -1)
                                          Call AddBadge ( .Item:SlowGo 0 )
                                          Call  ShowGotItem   ( .Item:SlowGo .True 00000000 )
                                          Call  SpeakToPlayer   ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % No take-backs!
                                          %Update the purchase count
                                          If  *GB_JAN04_CandySales_PurchaseCount  <  0000000A
                                                Add   *GB_JAN04_CandySales_PurchaseCount  00000001
                                          EndIf
                                    EndIf
                                    Return
                              %If No is picked, play the rejected offer dialouge...
                              Else
                                    Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
                                    Return
                              EndIf

%%          --------------------------------------------                                  %%%
                      %After all item trades are done, trade 1 star piece for 50 coins
                      Default
                              Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 00270107 ) % So I don't got anything else ...
                              %Ask the player if they want to trade...
                              Call  ShowChoice    ( 001E0014 ) % Yes No
                              %If Yes is picked...
                              If *Var0  ==  00000000
                                    %Check the player's star pieces against the amount
                                    Call  $CheckStarCandy    ( *VarA )
                                    % If the players Star Pieces (VarA) is less than the cost (Var C) Show the "You don't have enough dialouge"
                                    If  *VarA  <  1
                                          Call  SpeakToPlayer  ( .Npc:Self 009A0104 009A0101 00000000 00270101 ) % you don't have any Star Pieces. ...
                                    Return
                                    Else
                                          %Take away a candy star in exchange for a coin...
                                          Call AddStarPieces ( -1 )
                                          Call AddCoin ( 50 )
                                          Call ShowCoinCounter ( 00000001 )
                                          Wait 00000020
                                          Call ShowCoinCounter ( 00000000 )
                                          Call  SpeakToPlayer   ( .Npc:Self 009A0104 009A0101 00000000 00270106 ) % No take-backs!
                                    Return
                                    EndIf
                          %If No is picked, play the rejected offer dialouge...
                          Else
                              Call  SpeakToPlayer ( .Npc:Self 009A0104 009A0101 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
                              Return
                          EndIf
                
                  EndSwitch
130:  		EndIf
1C0:  Return
1C8:  End
  1D4:  Return
  1DC:  End
}




/%
#export:Script $CandyTrade
{
      % The main talk the Bulb-Blub would have...
                    
      %Check to see if the player has Star pieces/Candy Stars End the script if they have no Star Pieces
      Call  $CheckStarCandy    ( *VarA )
      If  *VarA  <  00000001
            Call  SpeakToPlayer  ( .NpcID:Bubulb_01 00B20004 00B20001 00000000 000A004F ) % Ahhh... I can tell you don't have any Star Pieces. ...
            Return
      EndIf
      %Ask the player if they want to trade...
      Call  SpeakToPlayer ( .NpcID:Bubulb_01 00990303 00990302 00000000 001000A9 ) % Did you come for the seed? Sorry, but it's not rea ...
      Call  ShowChoice    ( 001E0014 ) % Yes No
      %If Yes is picked...
      If *Var0  ==  00000000
            %Take away a candy star in exchange for a coin...
            Call AddStarPieces ( -1 )
            Call AddCoin ( 50 )
            Call ShowCoinCounter ( 00000001 )
            Wait 00000020
            Call ShowCoinCounter ( 00000000 )
            Call  SpeakToPlayer   ( .NpcID:Bubulb_01 00B20004 00B20001 00000000 000A004E ) % Later!
            Return
      %If No is picked...
      Else
            Call  SpeakToPlayer ( .NpcID:Bubulb_01 00B20004 00B20001 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
      EndIf

      Return
      End

}
%/

%Stuff copied/adapted from ChetRipo...

#export:Function $CandyTradeCheck
{
    0:  LW        V0, 84 (A0)
    4:  LA        V1, $???_802427BC
    C:  SLL       V0, V0, 3
   10:  ADDU      V0, V0, V1
   14:  LW        V1, 0 (V0)
   18:  SW        V1, AC (A0)
   1C:  LW        V0, 4 (V0)
   20:  SW        V0, B0 (A0)
   24:  JR        RA
   28:  LI        V0, 2
}
#new:Unknown $???_802427BC
{
	00000000 00000000 00000002 00000095 00000001 00000120 00000002 00000097
	00000000 00000000 00000002 0000008C 00000002 0000008A 00000002 0000008D
	00000002 0000008D 00000000 00000000 00000002 0000008D 00000002 0000008D
	00000002 0000008D
}

#export:Script $ShowMyReward
{
    0:  Call  ShowGotItem   ( *Var0 .True 00000000 )
   18:  Return
   20:  Return
   28:  End
}


#export:Function $InventoryFullCheck
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  SW        RA, 14 (SP)
    C:  JAL       ~Func:get_item_empty_count
   10:  COPY      S0, A0
   14:  SW        V0, 84 (S0)
   18:  LW        RA, 14 (SP)
   1C:  LW        S0, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}


%BadgeShopList
#export:BadgeShopInventory $StarCandyBadgeInventory
{
	.Item:AttackFXA        1`    0024008D % Changes the sound effects when Mario's attacking.
	.Item:PayOff           1`    00240096 % The more damage Mario takes, the more coins he rec ...
	.Item:ChillOut         3`    00240098 % Keeps you from being hit by a First Strike.
	.Item:PrettyLucky      5`    00240081 % Makes enemies fail to attack Mario every once in a ...
	.Item:FeelingFine      5`    0024008C % Protects Mario from poisoning and dizziness during ...
	.Item:HappyHeartA      8`    00240079 % Restores HP automatically during battle at a slow  ...
	.Item:HappyFlowerA     8`    0024007A % Restores FP automatically during battle at a slow  ...
	.Item:Peekaboo        10`    0024009F % Makes it possible to see your enemy's HP.
	.Item:ZapTap          10`    00240099 % In battle, makes most enemies who touch Mario take ...
	.Item:HeartFinder     12`    0024007C % After beating an enemy, makes more hearts appear t ...
	.Item:FlowerFinder    12`    0024007D % After beating an enemy, makes more flowers appear  ...
	.Item:HPDrain         15`    00240078 % Decreases Mario's attack power by 1. Restores 1 HP ...
	.Item:MoneyMoney      20`    0024009A % After a battle, lets Mario get twice as many coins ...
	.Item:FlowerSaverA    25`    0024007B % During battle, saves 1 FP every time you attack.
	.Item:PowerPlusA      25`    00240073 % Increases Mario's Jump and Hammer attack powers by ...
}

%Tied to the badge shop?
#export:Function $Function_80240A94
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LI        A1, *GF_HOS06_MerlowBadge_00
   1C:  CLEAR     A0
   20:  ADDU      A1, V0, A1
   24:  JAL       ~Func:set_variable
   28:  LI        A2, 1
   2C:  LW        RA, 10 (SP)
   30:  LI        V0, 2
   34:  JR        RA
   38:  ADDIU     SP, SP, 18
}

/%
%Tied to the shop menu? 
#export:Function $Function_80240AD0
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S3, 1C (SP)
    8:  COPY      S3, A0
    C:  SW        S6, 28 (SP)
   10:  LA        S6, 8010F290
   18:  SW        RA, 34 (SP)
   1C:  SW        S8, 30 (SP)
   20:  SW        S7, 2C (SP)
   24:  SW        S5, 24 (SP)
   28:  SW        S4, 20 (SP)
   2C:  SW        S2, 18 (SP)
   30:  SW        S1, 14 (SP)
   34:  BEQ       A1, R0, .o130
   38:  SW        S0, 10 (SP)
   3C:  JAL       ~Func:heap_malloc
   40:  LI        A0, 330
   44:  SW        V0, 78 (S3)
   48:  COPY      S5, V0
   4C:  CLEAR     S4
   50:  COPY      S2, S4
   54:  LI        S7, *GF_HOS06_MerlowBadge_00
   5C:  LA        S8, 8008A680
   64:  LA        S1, $StarCandyBadgeInventory
   6C:  COPY      S0, S5
        .o70
   70:  CLEAR     A0
   74:  JAL       ~Func:get_variable
   78:  ADDU      A1, S2, S7
   7C:  BNEL      V0, R0, .o108
   80:  ADDIU     S2, S2, 1
   84:  LW        V0, 0 (S1)
   88:  LA        A2, 800878E0
   90:  SLL       V0, V0, 5
   94:  ADDU      V0, V0, A2
   98:  LH        V1, 4 (V0)
   9C:  SW        S2, 108 (S0)
   A0:  LW        V0, 0 (V0)
   A4:  SLL       V1, V1, 3
   A8:  ADDU      A0, V1, S8
   AC:  SW        V0, 84 (S0)
   B0:  LW        V0, 0 (A0)
   B4:  SW        V0, 0 (S0)
   B8:  LBU       V0, F (S6)
   BC:  LW        V1, 4 (S1)
   C0:  SLT       V0, V0, V1
   C4:  XORI      V0, V0, 1
   C8:  SW        V0, 18C (S0)
   CC:  LBU       V0, F (S6)
   D0:  LW        V1, 4 (S1)
   D4:  SLT       V0, V0, V1
   D8:  BEQ       V0, R0, .oEC
   DC:  NOP
   E0:  LW        V0, 4 (A0)
   E4:  SW        R0, 18C (S0)
   E8:  SW        V0, 0 (S0)
        .oEC
   EC:  LW        V0, 8 (S1)
   F0:  SW        V0, 294 (S0)
   F4:  LW        V0, 4 (S1)
   F8:  ADDIU     S4, S4, 1
   FC:  SW        V0, 210 (S0)
  100:  ADDIU     S0, S0, 4
  104:  ADDIU     S2, S2, 1
        .o108
  108:  SLTI      V0, S2, F
  10C:  BNE       V0, R0, .o70
  110:  ADDIU     S1, S1, C
  114:  COPY      A0, S5
  118:  LI        V0, 3
  11C:  SW        V0, 318 (A0)
  120:  SW        S4, 324 (A0)
  124:  JAL       ~Func:create_popup_menu
  128:  SW        R0, 328 (A0)
  12C:  SW        R0, 70 (S3)
        .o130
  130:  LW        V0, 70 (S3)
  134:  LW        S5, 78 (S3)
  138:  BNE       V0, R0, .o15C
  13C:  ADDIU     V0, V0, 1
  140:  LH        V0, 32C (S5)
  144:  BEQ       V0, R0, .o16C
  148:  SW        V0, 74 (S3)
  14C:  JAL       ~Func:hide_popup_menu
  150:  NOP
  154:  LW        V0, 70 (S3)
  158:  ADDIU     V0, V0, 1
        .o15C
  15C:  SW        V0, 70 (S3)
  160:  SLTI      V0, V0, 14
  164:  BEQ       V0, R0, .o174
  168:  NOP
        .o16C
  16C:  BEQ       R0, R0, .o224
  170:  CLEAR     V0
        .o174
  174:  JAL       ~Func:destroy_popup_menu
  178:  NOP
  17C:  LW        V1, 74 (S3)
  180:  LI        V0, FF
  184:  BEQ       V1, V0, .o210
  188:  ADDIU     V0, V1, FFFF
  18C:  SLL       V0, V0, 2
  190:  ADDU      V0, S5, V0
  194:  LW        S2, 108 (V0)
  198:  LA        V0, $StarCandyBadgeInventory
  1A0:  SLL       V1, S2, 1
  1A4:  ADDU      V1, V1, S2
  1A8:  SLL       V1, V1, 2
  1AC:  ADDU      V1, V1, V0
  1B0:  LW        V0, 0 (V1)
  1B4:  SW        V0, 84 (S3)
  1B8:  LW        V0, 4 (V1)
  1BC:  SW        S2, 8C (S3)
  1C0:  SW        V0, 88 (S3)
  1C4:  LW        V0, 0 (V1)
  1C8:  SLL       V0, V0, 5
  1CC:  LTW       V0, V0 (800878E0)
  1D8:  SW        V0, 94 (S3)
  1DC:  LW        V0, 0 (V1)
  1E0:  SLL       V0, V0, 5
  1E4:  LTBU      V1, V0 (800878FA)
  1F0:  SLL       V0, V1, 2
  1F4:  ADDU      V0, V0, V1
  1F8:  SLL       V0, V0, 2
  1FC:  LTB       V0, V0 (8008F072)
  208:  BEQ       R0, R0, .o218
  20C:  SW        V0, 98 (S3)
        .o210
  210:  LI        V0, FFFF
  214:  SW        V0, 84 (S3)
        .o218
  218:  JAL       ~Func:heap_free
  21C:  LW        A0, 78 (S3)
  220:  LI        V0, 2
        .o224
  224:  LW        RA, 34 (SP)
  228:  LW        S8, 30 (SP)
  22C:  LW        S7, 2C (SP)
  230:  LW        S6, 28 (SP)
  234:  LW        S5, 24 (SP)
  238:  LW        S4, 20 (SP)
  23C:  LW        S3, 1C (SP)
  240:  LW        S2, 18 (SP)
  244:  LW        S1, 14 (SP)
  248:  LW        S0, 10 (SP)
  24C:  JR        RA
  250:  ADDIU     SP, SP, 38
}

#new:Function $Function_8024077C
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  SW        V0, 8C (S1)
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  JAL       ~Func:get_variable
   34:  COPY      A0, S1
   38:  SW        V0, 90 (S1)
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  JAL       ~Func:get_variable
   48:  COPY      A0, S1
   4C:  SW        V0, 94 (S1)
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       ~Func:get_variable
   5C:  COPY      A0, S1
   60:  SW        V0, 98 (S1)
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  JAL       ~Func:get_variable
   70:  COPY      A0, S1
   74:  SW        V0, 9C (S1)
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  JAL       ~Func:get_variable
   84:  COPY      A0, S1
   88:  SW        V0, A0 (S1)
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  JAL       ~Func:get_variable
   98:  COPY      A0, S1
   9C:  SW        V0, A4 (S1)
   A0:  LW        A1, 0 (S0)
   A4:  ADDIU     S0, S0, 4
   A8:  JAL       ~Func:get_variable
   AC:  COPY      A0, S1
   B0:  SW        V0, A8 (S1)
   B4:  LW        A1, 0 (S0)
   B8:  ADDIU     S0, S0, 4
   BC:  JAL       ~Func:get_variable
   C0:  COPY      A0, S1
   C4:  SW        V0, AC (S1)
   C8:  LW        A1, 0 (S0)
   CC:  JAL       ~Func:get_variable
   D0:  COPY      A0, S1
   D4:  SW        V0, B0 (S1)
   D8:  LW        RA, 18 (SP)
   DC:  LW        S1, 14 (SP)
   E0:  LW        S0, 10 (SP)
   E4:  LI        V0, 2
   E8:  JR        RA
   EC:  ADDIU     SP, SP, 20
}

#new:Unknown $???_80243514
{
	0000003B 00000000
}
%/

/%
%Commenting out these functions as they seem to be tied to Parakarry's mail check, which isn't needed
#export:Script $Script_8024351C
{
    0:  Call  $Function_8024077C    ( 00000001 00B20004 00B20001 0000003B 00000000 000A0058 000A0059 000A005A 000A005B $???_80243514 )
   34:  ExecWait  $Script_8024321C
   40:  Return
   48:  End
}

%Check that gets called during the Parakarry deliever check (Safe NPC?)
#new:Function $Function_802409F8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  JAL       ~Func:get_npc_unsafe
   14:  LW        A0, 8C (S0)
   18:  COPY      A1, V0
   1C:  LW        A0, 94 (S0)
   20:  LW        V1, 28 (A1)
   24:  SW        A0, 28 (A1)
   28:  LW        RA, 14 (SP)
   2C:  LW        S0, 10 (SP)
   30:  LI        V0, 2
   %34:  SAW       V1, $End[1C4] %Unable to find the "$End" script so I'm leaving this line out for now...
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

%An unknown script that gets called during the Parakarry mail check function...
#new:Script $Script_802431AC
{
    0:  Set   *Var0  *VarB
   10:  Set   *Var1  *Var2
   20:  Call  $Function_802406E0    ( *Var0 )
   30:  BindLock  $Script_80242E88 00000010 00000000 $End[0] 00000000 00000001
   50:  Call  $Function_80240654    ( *Var0 )
   60:  Return
   68:  End
}

%Unknown script
#new:Function $Function_802406E0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  COPY      V1, V0
   18:  BEQ       V1, R0, .o64
   1C:  CLEAR     A0
   20:  LW        V0, 0 (V1)
   24:  BEQL      V0, R0, .o50
   28:  SLL       V0, A0, 2
   2C:  LA        A1, $End[0]
        .o34
   34:  ADDIU     V1, V1, 4
   38:  ADDIU     A0, A0, 1
   3C:  SW        V0, 0 (A1)
   40:  LW        V0, 0 (V1)
   44:  BNE       V0, R0, .o34
   48:  ADDIU     A1, A1, 4
   4C:  SLL       V0, A0, 2
        .o50
   %50:  STW       R0, V0 ($End[0])
   5C:  BEQ       R0, R0, .o8C
   60:  NOP
        .o64
   64:  LA        V1, $End[0]
   6C:  COPY      A1, V1
        .o70
   70:  ADDIU     V0, A0, 10
   74:  SW        V0, 0 (V1)
   78:  ADDIU     V1, V1, 4
   7C:  ADDIU     A0, A0, 1
   80:  SLTI      V0, A0, 70
   84:  BNE       V0, R0, .o70
   88:  SW        R0, 1C0 (A1)
        .o8C
   8C:  LW        RA, 10 (SP)
   90:  LI        V0, 2
   94:  JR        RA
   98:  ADDIU     SP, SP, 18
}

%Script that checks if Parakarry can deliver a letter to the NPC....
#export:Script $Script_8024321C
{
    0:  Set   *VarC  00000000
   10:  If  *GB_StoryProgress  <  .Story:Ch2_ParakarryJoinedParty % FFFFFFBA
   20:  	Return
   28:  EndIf
   30:  Call  $Function_802409F8 ( )
   3C:  Call  GetCurrentPartnerID   ( *Var0 )
   4C:  Call  FindKeyItem   ( *Var5 *Var1 )
   60:  If  *Var0  ==  .Partner:Parakarry % 4
   70:  	If  *Var1  !=  FFFFFFFF
   80:  		Call  DisablePartnerAI  ( 00000000 )
   90:  		Call  PlayerFaceNpc ( *Var2 .False )
   A4:  		Wait  1`
   B0:  		Call  GetNpcPos     ( *Var2 *VarD *Var0 *VarE )
   CC:  		Call  GetNpcPos     ( .Npc:Partner *VarD *VarE *VarF )
   E8:  		Call  SetNpcJumpscale   ( .Npc:Partner *Fixed[0.0] )
   FC:  		Add   *Var0  0000000A
  10C:  		Call  NpcJump1      ( .Npc:Partner *VarD *Var0 *VarF 0000000A )
  12C:  		Call  SpeakToNpc    ( .Npc:Partner 00040006 00040001 00000000 *Var2 *Var7 ) % variable string ID
  150:  		Call  EnablePartnerAI ( )
  15C:  		ExecWait  $Script_802431AC
  168:  		Switch  *Var0
  174:  			Case  ==  FFFFFFFF
  180:  				Call  DisablePartnerAI  ( 00000000 )
  190:  				Wait  1`
  19C:  				Call  SpeakToPlayer     ( .Npc:Partner 00040006 00040001 00000005 *Var8 ) % variable string ID
  1BC:  				Call  EnablePartnerAI ( )
  1C8:  				Set   *VarC  00000001
  1D8:  			Default
  1E0:  				Call  DisablePartnerAI  ( 00000000 )
  1F0:  				Wait  1`
  1FC:  				Call  SpeakToPlayer     ( .Npc:Partner 00040006 00040001 00000005 *Var9 ) % variable string ID
  21C:  				If  *VarA  !=  00000000
  22C:  					Call  SpeakToPlayer ( *Var2 *Var3 *Var4 00000000 *VarA ) % variable string ID
  24C:  				EndIf
  254:  				Call  EnablePartnerAI ( )
  260:  				If  *Var6  !=  00000000
  270:  					Set   *Var0  *Var6
  280:  					Set   *Var1  00000001
  290:  					ExecWait  $Script_80242C0C
  29C:  					Call  AddKeyItem    ( *Var6 )
  2AC:  				EndIf
  2B4:  				Set   *VarC  00000002
  2C4:  		EndSwitch
  2CC:  	EndIf
  2D4:  EndIf
  2DC:  Call  $Function_80240A3C ( )
  2E8:  Return
  2F0:  End
}
%/

%Star piece check stript
#export:Script $Script_8024356C
{
    0:  If  *VarC  ==  00000002
   10:  	Set   *Var0  0000015C
   20:  	Set   *Var1  00000003
   30:  	ExecWait  $Script_80242C0C
   3C:  	Call  AddStarPieces ( 00000001 )
   4C:  EndIf
   54:  Return
   5C:  End
}

%Show the item script
#export:Script $Script_80242C0C
{
    0:  Call  ShowGotItem   ( *Var0 .True 00000000 )
   18:  Return
   20:  Return
   28:  End
}

%A starpiece check script?
#export:Function $CheckStarCandy
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LABU      A2, 8010F29F
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}
/%
%Script that triggers when you talk to the NPC
#export:Script $Script_Interact_802436A0
{
    0:  %ExecWait  $Script_8024351C %Tied to Parkarry mail checks, which are uneeded...
    C:  ExecWait  $Script_8024356C
   18:  If  *VarC  !=  00000000
   28:  	Return
   30:  EndIf
   38:  If  *GB_HOS06_Merlow_PurchaseCount  >=  0000000F
   48:  	Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A004C ) % Oh, you wanna trade Star Pieces for Badges, do you ...
   68:  	Return
   70:  EndIf
   78:  If  *MapFlag[00]  ==  .True
   88:  	Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A004D ) % You want to trade more?
   A8:  Else
   B0:  	If  *GF_HOS06_Met_Merlow  ==  .False
   C0:  		Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A004A ) % I'm the famous Merlow of Shooting Star Summit. I c ...
   E0:  		Set   *GF_HOS06_Met_Merlow  .True
   F0:  	Else
   F8:  		Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A004B ) % I'm the famous Merlow of Shooting Star Summit. Got ...
  118:  	EndIf
  120:  EndIf
  128:  Call  ShowChoice    ( 001E0014 ) % Yes No
  138:  If  *Var0  ==  00000001
  148:  	Call  ContinueSpeech    ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A004E ) % Later!
  168:  	Return
  170:  EndIf
  178:  Call  $CheckStarCandy    ( *Var0 )
  188:  If  *Var0  ==  00000000
  198:  	Call  ContinueSpeech    ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A004F ) % Ahhh... I can tell you don't have any Star Pieces. ...
  1B8:  	Return
  1C0:  EndIf
  1C8:  Call  ContinueSpeech    ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0050 ) % Which Badges do you want to swap for?
  1E8:  Label  0
  1F4:  Call  $Function_80240AD0 ( )
  200:  Wait  10`
  20C:  If  *Var0  ==  FFFFFFFF
  21C:  	Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
  23C:  	Return
  244:  EndIf
  24C:  Call  $CheckStarCandy    ( *Var3 )
  25C:  If  *Var3  <  *Var1
  26C:  	Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0051 ) % Ahh... Did you change your mind? I see...
  28C:  	Goto  0
  298:  EndIf
  2A0:  Call  SetMessageString  ( *Var4 00000000 )
  2B4:  Call  SetMessageValue   ( *Var1 00000001 )
  2C8:  Call  SetMessageValue   ( *Var5 00000002 )
  2DC:  If  *Var1  ==  00000001
  2EC:  	Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0053 ) % I'm going to exchange "" for Star Piece. The numbe ...
  30C:  Else
  314:  	Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0052 ) % I'm going to exchange "" for Star Pieces. The numb ...
  334:  EndIf
  33C:  Set   *Var3  *Var0
  34C:  Call  ShowChoice    ( 001E000D ) % Yes No
  35C:  If  *Var0  ==  00000001
  36C:  	Call  ContinueSpeech    ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0054 ) % Ahh... Did you change your mind? You're an indecis ...
  38C:  	Goto  0
  398:  EndIf
  3A0:  Call  CloseMessage ( )
  3AC:  Mul   *Var1  FFFFFFFF
  3BC:  Call  AddStarPieces ( *Var1 )
  3CC:  Add   *GB_HOS06_Merlow_PurchaseCount  00000001
  3DC:  Set   *MapFlag[00]  .True
  3EC:  Call  $Function_80240A94    ( *Var2 )
  3FC:  Set   *Var0  *Var3
  40C:  Set   *Var1  00000002
  41C:  ExecWait  $Script_80242C0C
  428:  Call  AddBadge  ( *Var0 *Var1 )
  43C:  If  *GB_HOS06_Merlow_PurchaseCount  >=  0000000F
  44C:  	Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0055 ) % All right! These Star Pieces really help round out ...
  46C:  	Return
  474:  EndIf
  47C:  Call  $CheckStarCandy    ( *Var0 )
  48C:  If  *Var0  <=  00000000
  49C:  	Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0055 ) % All right! These Star Pieces really help round out ...
  4BC:  	Return
  4C4:  EndIf
  4CC:  Call  SpeakToPlayer ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0056 ) % All right then, mister. Why don't we swap some mor ...
  4EC:  Call  ShowChoice    ( 001E000D ) % Yes No
  4FC:  If  *Var0  ==  00000001
  50C:  	Call  ContinueSpeech    ( .NpcID:Merlow_01 00B20004 00B20001 00000000 000A0057 ) % You don't want to? Oh well. At least I was able to ...
  52C:  	Return
  534:  EndIf
  53C:  Call  CloseMessage ( )
  548:  Goto  0
  554:  Return
  55C:  End
}

%Script that binds the NPC to the map....
#export:Script $Script_Init_80243C34
{
    0:  Set   *MapFlag[00]  .False
   10:  Call  BindNpcInteract   ( .Npc:Self $Script_Interact_802436A0 )
   24:  Return
   2C:  End
}
%/
%Script tied to trading items for Star Pieces/Candy Star
#export:Script $CandyStarTrade
{
/%
   Call  ShowChoice    ( 001E0014 ) % Yes No
   %If Yes is picked...
   If *Var0  ==  00000000
      %Check to see if the player has Star pieces/Candy Stars
      Call  $CheckStarCandy    ( *Var0 )
      If  *Var0  ==  00000000
            Call  ContinueSpeech    ( .NpcID:Bubulb_01 00B20004 00B20001 00000000 000A004F ) % Ahhh... I can tell you don't have any Star Pieces. ...
            Return
      Else%/
            %Take away a candy star in exchange for a coin...
            Call AddStarPieces ( -1 )
            Call AddCoin ( 50 )
            Call ShowCoinCounter ( 00000001 )
      %EndIf
      
   %EndIf
   24:  Return
   2C:  End
}