% Mostly contains code copied from Dark Star to make the berserker badge work (in theory)
		% Going to comment out everything that doesn't look related until I figure out which parts I need.
		% Actually orginal plan was to just take bresker but this patch also seems to have fixes to other issues I've been having...
		% So I'll keep that as well and some other badge changes that I recongize all the functions in...

%Berserker only: mario can pierce defense (by ignoring it)

%1A0224 --> 80271944
%#new:Function $Function_calc_player_damage_enemy
%  604:  JAL       ~Func:get_defense
%  608:  COPY      A0, S3

@Hook 1A0828
{
	PUSH	A0, A1
	LAB		A0, 800DBE00
	LI		A1, 12`
	BEQ		A0, A1 .skip
	NOP
	LI		A1, 15`
	BEQ		A0, A1 .skip
	NOP
	.normal
	POP		A0, A1
	JAL     802662BC %~Func:get_defense
	COPY    A0, S3	
	J		80271F50
	NOP
	.skip
	POP		A0, A1
	J		80271F50
	ORI		V0, R0, 0`
}

/%
% ** Tied to Spin Smash, comment but leave in for later in case I want to use it**

%need to add a weight check

@Hook 1AD5D8
{
	PUSH	  A0, A1, A2, S3
	BEQ       V0, R0, .yesjump
	LI        V0, A
	%what needs to be done here? load pointer (8 + S3) then load 1D + (pointer) to get spin smash level
	LAB		  A0, 8010F2BD
	LW		  A1, 8 (S3)
	LB	      A1, 1D (A1)
	ADDI 	  A0, A0, 1
	BLT		  A0, A1, .yesjump
	NOP
	.nojump
	POP		  A0, A1, A2, S3
	J	 	  8027ED00
	LI        V0, A
	.yesjump
	POP		  A0, A1, A2, S3
	J		  8027ED18
	LI        V0, A
}
%/


% Cloud Nine is not in Sweet Expedition and I may want it to be RNG if I do keep it... 
	%but I'll leave this just in I change my mind, I'll have to just remove it from comments if I do...
/%
@Function 1A5BFC %remove cloud 9 ability to negate damage
{
ADDIU	V0, R0, 0
}
%/
%the cloud nine turns address: 800DC070 + A4

%the damage reduction is in DamageModifiers.patch


%Change happy badges to work without RNG
%normally, there is a 50% chance to trigger (?)
%Therefore, I will make happy badges trigger every other turn

%Each set of badges (happy heart, crazy heart, happy flower) are controlled by a separate randomizer

% Currently happy badges never trigger. Need to first understand what triggers turn count before I can implement this
%Crazy heart
@Function 174E3C
{
LAB		V0, 800DBD7B	%global turn count
ANDI	V0, V0, 1		%becomes 0 if even, 1 if odd
}

%Happy heart
@Function 174E60
{
LAB		V0, 800DBD7B	%global turn count
ANDI	V0, V0, 1		%becomes 0 if even, 1 if odd
}

%Happy flower
@Function 174E80
{
LAB		V0, 800DBD7B	%global turn count
ANDI	V0, V0, 1		%becomes 0 if even, 1 if odd
}
/%
@Hook 174E9C
{
	PUSH	  A0, V0
	%JAL		  $HasGreedStone
	NOP
	BEQ		  V0, R0, .normalend
	NOP
	%JAL		  $IsBadgeEquipped
	%LI		  A0, .Item:PityFlower
	BEQ		  A0, R0, .normalend
	NOP	
	.modifiedend
	POP		  A0, V0
	COPY      S4, V0
	ADDI	  S4, S4, 3`
	J		  802465C4
	ADDU      V0, S5, S2
	.normalend
	POP		  A0, V0
	COPY      S4, V0
	J		  802465C4
	ADDU      V0, S5, S2
}


%8024650C
@Hook 174DEC
{
	PUSH	  A0, V0
	%JAL		  $HasGreedStone
	NOP
	BEQ		  V0, R0, .checkbranchnormally
	NOP
	%JAL		  $IsBadgeEquipped
	%LI		  A0, .Item:PityFlower
	BEQ		  A0, R0, .checkbranchnormally
	NOP	
	BEQ		  R0, R0, .nobranch
	NOP
	.checkbranchnormally
	POP	 	  A0, V0
	BEQ       V0, R0, .dobranch
	LI        V0, 5	
	.nobranch2
	J		  80246514
	NOP
	.nobranch
	POP	 	  A0, V0
	J		  80246514
	NOP
	.dobranch
	J		  802465D4
	NOP
}
%/


%Berserker (blocking check)
%Removes RNG (so berserker mario has guaranteed blocking now)
%It's probably balanced since using berserker is still a net negative even if what you're fighting has really difficult block timing
%	^	Against normal enemies, it could be viable, but the RNG and lack of special moves can offset the damage boost
@Function 1A6294
{
	ADDIU V0, R0, 1
}


%Chill out observations
%Lines that check chill out strength (This is what determines when the arrow is first displayed?)
%	AP + 223
%	Continuously (*Changing chill out strength will immediately show an arrow)
%80256D60
%8026F3FC		<-- Called during other enemy turns (*so this does not directly control arrow)
%	(When checking attack power)
%80277890 	
%	(initialize strength)
%802656A0	


% player pointer 80746250


%80744264

%Lines that check chill out duration
%	AP + 224
%	Start/End of enemy turns
%8024283C	
%80242840	(unsigned!)
%		Note that there is some code that subtracts the value and then destroys the arrow when the values become 0
%		Also, chill out strength is reset to 0 when duration becomes 0
%	(When checking attack power)
%80277884 	
%	(initialize duration)
%8026569C	


%Clear out some more space
%The two values after chill out values appear unused (They take some uninitialized values which is evidence that they are really unused)
%Also, 209 + AP is unused
@Hook 193F7C %8026569C
{
SB	R0, 19B (S1) %Sleep hit count (In order to fix a sleep bug I have to allow one hit)
SB	R0, 209 (S1) %Status inflict count
SB	R0, 223 (S1) %chillout strength
SB	R0, 224 (S1) %chillout duration
SB	R0, 225 (S1) %defdown strength
J	802656A4
SB	R0, 226 (S1) %defdown duration
}

@Hook 1A0848 %80271F68
{
PUSH	S0, S1, S2
LB 		V0, 222 (S3)
LB		S0, 226 (S3) %defdown duration
BEQ		S0, R0, .no
ORI		S0, R0, 0
LB		S0, 225 (S3) %defdown strength
.no
SLT		S2, S5, R0	 %S5 < R0 => do not force defense = 0
BNE		S2, R0, .defhigh
SUBU 	S5, S5, S0	 %Subtract by defdown strength (or 0 if defdown duration is 0)
BGT		S5, R0, .defhigh	%if defense < 0, force it to be 0
NOP
ORI		S5, R0, 0	 %force defense to be at least 0 (if defense was not already negative)
.defhigh
POP		S0, S1, S2
J 		80271F70
ADDU 	S5, S5, V0
}

@Hook 1AD290 %8027E9B0
{
PUSH	S5, S6, S2
LB 		V0, 222 (S3)
LB		S5, 226 (S3) %defdown duration
BEQ		S5, R0, .no
ORI		S5, R0, 0
LB		S5, 225 (S3) %defdown strength
.no
SLT		S2, S0, R0	 %S0 < R0 => do not force defense = 0
BNE		S2, R0, .defhigh
SUBU 	S0, S0, S5	 %Subtract by defdown strength (or 0 if defdown duration is 0)
BGT		S0, R0, .defhigh
NOP
ORI		S0, R0, 0	 %force defense to be at least 0	(if not already negative)
.defhigh
POP		S5, S6, S2
J 		8027E9B8
ADDU 	S0, S0, V0
}

%As it turns out, there are no items that do not ignore defense
%Therefore I'm not programming def down for items (as it would always be skipped over)
%If you really want to, you could locate the piece of code that reads from 222 + actor pointer and copy the above code
%	^	Don't follow this advice, items wouldn't read from there anyway


%Reduce defdown
@Hook 17111C %8024283C
{
	LB		V0, 226 (V1)
	ADDI	V0, V0, FFFF 	%there is no SUBI instruction :P
	SLT		A0, R0, V0
	BNE		A0, R0, .gt
	NOP
	ORI		V0, R0, 0		%Reset to 0
	SB		R0, 225 (V1) 	%defdown strength
	.gt
	SB		V0, 226 (V1) 	%defdown duration
	LB		V0, 224 (V1)
	J 		80242844
	LBU		A0, 224 (V1)
}


%Init mario chill / defdown
@Hook 192F98 %802646B8
{
	SB		R0, 209 (S1) %Status inflict count
	SB		R0, 225 (S0)
	SB		R0, 226 (S0)
	SB		R0, 223 (S0)
	J 		802646C0
	SB		R0, 224 (S0)
}

%init partner chill / defdown
@Hook 193704 %80264E24
{
	SB		R0, 209 (S1) %Status inflict count
	SB		R0, 225 (S1)
	SB		R0, 226 (S1)
	SB		R0, 223 (S1)
	J 		80264E2C
	SB		R0, 224 (S1)
}

%hard to change this stuff because of all the branches everywhere
%Calculating defdown in damagetarget
%80277810
%BNEZ	V0, 80277854 	%this leads to yet another hook in NewGamePlus.patch
@Hook 1A60F0
{
	%Check branch
	PUSH	S0, S1, S2
	BNE 	V0, R0, .dobranch
	NOP
	BEQ		R0, R0, .nobranch
	NOP
	.dobranch
	POP		S0, S1, S2
	J		80277854
	NOP
	.nobranch
	LB		S0, 226 (S3)	%Defdown dur
	BEQ		S0, R0, .nodur
	ORI		S1, R0, 0
	LB		S1, 225 (S3)	%Defdown str	
	.nodur	
	LB		V0, 222 (S3)
	SUB		V0, V0, S1
	POP		S0, S1, S2
	J 		80277818
	NOP
}

%8026F3DC
%Checks value and sets flags if you have atk up / def up etc
%Unclear purpose

%80277818
%LB		V0, 222 (S3)
%rewritten above
@Function 1A60F8
{
	NOP
}


% *** Not used for Sweet Expedition, but I want to leave this for refrence sake on the off chance I make a full mod
	% Like I really like this feature in Dark Star, but I was conflicted about how "balanced" it was
/%
%Partner feeling fine
@Hook 194AB8 %802661D8
{
	PUSH	A0
	JAL		$IsBadgeEquipped
	LI		A0, .Item:FeelingFine
	BNE		A0, R0, .modified
	NOP
	.normal
	POP		A0
	SLTI	V0, V0, A
	J		802661E0
	SB		V1, 216 (S0)
	.modified
	POP		A0
	J		802661F0
	NOP
}
%/



@Function 1A0998
%fix bug with HP drain and negative damage
{
    NOP
    NOP
}

@Function 1A09F4
%Mega HP Drain too
{
    NOP
    NOP
}

% Remove FP drain functions as they don't exist in Sweet Expedition... yet...
/% 
% I think these are tied exclusively to differences healing badges have to Greed Stone, 
	%so don't need but hold onto in case I overlooked something that's actually needed.
@Data 1B7644
{
	00000046 00000001 $Script_PlayerHappy_Modified
	00000002 00000000
	00000001 00000000
}


	
#new:Script:Battle $Script_PlayerHappy_Modified
{
    0:  Call  UseIdleAnimation    ( .Actor:Player .False )
   14:  Call  8024E6B4        ( 00000002 )
   24:  Call  SetAnimation    ( .Actor:Player 00000000 00010032 )
   3C:  Call  GetActorPos     ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Call  802619E8        ( *Var0 *Var1 *Var2 )					%create hp drain / happy effect
   70:  Add   *Var0  00000000
   80:  Add   *Var1  00000023
		%hp drain?
		Call	 $Function_HasGreedStone ( *VarF )
		If *VarF == 0`
   90:  	Set   *Var3  *VarA		%hp?
		Else
   90: 	 	Add   *VarC  *VarA		%fp recovery += a
		EndIf
   A0:  Add   *Var3  *VarB		%whoops need to reorder this over here
   B0:  If  *Var3  >  00000000
   C0:  	Call  FXRecoverHP ( *Var0 *Var1 *Var2 *Var3 )
   DC:  EndIf
   E4:  Call  GetActorPos ( .Actor:Player *Var0 *Var1 *Var2 )
  100:  Add   *Var0  00000014
  110:  Add   *Var1  00000019
  120:  If  *VarC  >  00000000
  130:  	Call  FXRecoverFP ( *Var0 *Var1 *Var2 *VarC )
  14C:  EndIf
  154:  Set   *Var3  *VarA
  164:  Add   *Var3  *VarB
  174:  Call  GetActorPos ( .Actor:Player *Var0 *Var1 *Var2 )
  190:  Add   *Var1  00000019
  1A0:  Call  802D7520  ( *Var0 *Var1 *Var2 *Var3 )
  1BC:  Wait  10`
		Call	 $Function_HasGreedStone ( *VarF )
		If *VarF == 0`
  1C8:  	Set   *Var0  *VarA
  1D8:  	If  *Var0  >  00000000
  1E8:  		Loop  *Var0
  1F4:  			Call  IncrementPlayerHP ( )
  200:  			Wait  1`
  20C:  		EndLoop
  214:  	EndIf
		Else
  1C8:  	Set   *Var0  *VarA
			%do not recover fp yet
		EndIf
  21C:  Set   *Var0  *VarB
  22C:  If  *Var0  >  00000000
  23C:  	Loop  *Var0
  248:  		Call  IncrementPlayerHP ( )
  254:  		Wait  1`
  260:  	EndLoop
  268:  EndIf
  270:  Set   *Var0  *VarC
  280:  If  *Var0  >  00000000
  290:  	Loop  *Var0
  29C:  		Call  IncrementPlayerFP ( )
  2A8:  		Wait  1`
  2B4:  	EndLoop
  2BC:  EndIf
  2C4:  Wait  30`
  2D0:  Call  SetAnimation        ( .Actor:Self 00000000 00010002 )
		%hp drain?
		Call	 $Function_HasGreedStone ( *VarF )
		If *VarF != 0`
			Sub   *VarC  *VarA
		EndIf
  2E8:  Call  80261B40 ( )
  2F4:  Call  UseIdleAnimation    ( .Actor:Player .True )
  308:  Return
  310:  End
}
%/

% Removed some script tied to Dark Star exclusive badges...


/%
%Lucky Day -> Head Start
%Gives you 2 turns at the start of battle
%(this is done by setting the mario turns address to 2 at the start of battle)
% ** Commenting this out for now as I don't think I'll use it in Sweet Expedition, but maybe for something else?
@Hook 1A5C88
{
PUSH	RA, A0
LAB		A0, 800DBDA2
ANDI 	A0, A0, 10	 %Flag 10
COPY	V0, A0
POP		RA, A0
J		802773B0
NOP					 %ORI	V0, R0, 0 
}


@Function 1A5C98
{
ORI	V0, R0, 0 %this is less than 20%
}
%/

/%

% Not used if not using Head Start, but if I do make Lucky Day and Hustle drinks I'll have to learn how this hook works eventually...

%hooked over: setting hustle drink var to 0
%so now we'll set it to 2 but only if you have the badge on
%ability id: 23 hex (35 dec)
@Hook 16FDA0 %802414C0
{
%Check for head start badge
PUSH 	A0, A1, S0, V0, V1, RA
%Anti hustle token init
SAW		R0, $AntiHustleToken
JAL     ~Func:is_ability_active %800E9D48
ORI		A0, R0, 23 
BEQ		V0, R0, .nope
SB		R0, 8B (S4)
ORI		V1, R0, 2
SB		V1, 8B (S4) %set turn count to 2  %S4 contains the start of battle data at this point
ORI		V1, R0, 1
SAW		V1, $AntiHustleToken
.nope
%Add a check for file code 13
LAB		A0, 800DBE00
LI		V1, 13`
BNE		A0, V1, .nocode13
NOP
ORI		V1, R0, 2
SB		V1, 8B (S4) %set turn count to 2  %S4 contains the start of battle data at this point
ORI		V1, R0, 1
SAW		V1, $AntiHustleToken
.nocode13
JAL		$GetCurseState
NOP
%Check AutoBlock
JAL     $IsBadgeEquipped
ORI		A0, R0, FC %formerly payoff
%
ORI		V0, R0, 1
BNE		A0, R0, .yes
NOP
ORI		V0, R0, 0
.yes
SAB 	V0, $BattlePerks[2]
%While we're here, also revert tattles to normal
JAL		$PopTattles
NOP
JAL		$PopNames
NOP
%also reset flower power value (Failsafe 2)
SAB		R0, $FlowerPowerBool
SAW		R0, $FreebieCounter
%Also reset outta sight cost
LAW		V1, $OuttaSightAddress
ORI		V0, R0, 3
SB		V0, 0 (V1)
%Reset hustle spell counter
SAB		R0, $HustleSpellCounter
%Reset air lift boolean too
SAW		R0, $AirLiftBool
%Saver init
LI		A0, $ItemCostReductionData
SB		R0, 0 (A0)		%str
SB		R0, 1 (A0)		%count
SB		R0, 2 (A0)		%yoshi cookie
SB		R0, 3 (A0)		%???? extra value used for yoshi cookies
%Add a check for file code 14
LAB		A0, 800DBE00
LI		V1, 14`
BNE		A0, V1, .nocode14
NOP
LI		A0, 2
SAB		A0, $ItemCostReductionData[2]
LI		A0, 0
SAB		A0, $ItemCostReductionData[3]
.nocode14
%eternal init
LI 		A0, $EternalCostIncreases
SB		R0, 0 (A0)
%Miracle init
LI		A0, $MiracleJellyData
SB		R0, 0 (A0)		%turns
SB		R0, 1 (A0)		%use count
%Coin move use init
SAW		R0, $Data_TurnsSinceUsedCoins
POP 	A0, A1, S0, V0, V1, RA
J		802414C8
SB		R0, 93 (S4)
%look in NewGamePlus.patch for the stuff that makes Super Curse actually work
}
%/

% May be tied to curse badges which might be worth implementing depending on what else I have to add... ...
% Must be missing code. I think curse makes all enemies have 0 HP, so I'm removing it for now...
%A0 = input value to multiply
%V0 = output
/%
#export:Function $CurseMultiply
{
PUSH	RA, A0, A1, A2, T0
%just in case (probably unneccessary)
JAL		$GetCurseState
NOP
LAB		A2, $CurseFlags
%1 = x1.5	= x1.5
%2 = x2		= x2
%3 = x3		= x1.5 x2 or x3
%4 = x4.5	= x1.5 x3
%5 = x6		= x2 x3
%6 = x9  	= x1.5 x2 x3
ORI		V0, A0, 0
%Equals 0: go to end without multiplying
BEQ		A2, R0, .end
NOP
%2,3,5,6 (Not 1 or 4): multiply by 2
.ultra
LI		T0, 1
BEQ		T0, A2, .mega
NOP
LI		T0, 4
BEQ		T0, A2, .mega
NOP
ADD		A0, A0, A0
.mega
%4,5,6: multiply by 3
SLTI	A1, A2, 4
BNE		A1, R0, .super
NOP
ADD		T0, A0, R0
ADD		A0, A0, A0
ADD		A0, A0, T0
%Calculate super last to avoid rounding errors
%Not 2 or 5: multiply by 1.5
.super
LI		T0, 2
BEQ		T0, A2, .end
NOP
LI		T0, 5
BEQ		T0, A2, .end
NOP
ADD		T0, A0, R0
SRL		T0, T0, 1
ADD		A0, T0, A0
.end
COPY	V0, A0
POP		RA, A0, A1, A2, T0
JR		RA
NOP
}

#export:Function $GetCurseState
{
PUSH	RA, S0, A0, A1, A2, A3, T0, T1, T2, T3, V1
%actually recalculate the curse state
JAL 	$IsBadgeEquipped
ORI		A0, R0, EA			%mega curse!
DADDU	S0, A0, R0
DADDU	S0, A0, S0
DADDU	S0, A0, S0
JAL 	$IsBadgeEquipped
ORI		A0, R0, 120			%ultra curse
DADDU	S0, A0, S0
DADDU	S0, A0, S0
JAL 	$IsBadgeEquipped
ORI		A0, R0, 12A			%super curse
DADDU	S0, A0, S0
%enforce hardcoding
LAB		A0, 800DBE00
LI		A1, 4`
BEQ		A0, A1 .hardcode
LI		A2, 2`
LI		A1, 5`
BEQ		A0, A1 .hardcode
LI		A2, 3`
LI		A1, 8`
BEQ		A0, A1 .hardcode
LI		A2, 3`
LI		A1, 9`
BEQ		A0, A1 .hardcode
LI		A2, 4`
BEQ		R0, R0, .nohardcoding
NOP
.hardcode
BGT		S0, A2, .nohardcoding
NOP
COPY	S0, A2
.nohardcoding
SAB		S0, $CurseFlags %super curse flag
%
POP		RA, S0, A0, A1, A2, A3, T0, T1, T2, T3, V1
LAB		V0, $CurseFlags
JR		RA
NOP
}

#export:Function $Function_GetCurseState
{
PUSH	RA
%just in case (probably unneccessary)
JAL		$GetCurseState
NOP
LAB		A2, $CurseFlags
%Impose maximum of 3 here (make it so that you don't get stuff for getting past 3x and I don't want to rewrite the other curse stuff)
LI		V0, 3
BLT		A2, V0, .found
NOP
LI		A2, 3
.found
LW		V0, C (A0)
JAL		~Func:set_variable
LW		A1, 0 (V0)
POP		RA
JR		RA
ADDIU	V0, R0, 2
}

%#export $CurseMultiply
%#export $GetCurseState
%#export $Function_GetCurseState



% ** I want to keep Bump Attack (Two Curse Badges are fine I guess)
%Bump Attack -> Super Curse ("Ultra Curse")
%doubles incoming damage, enemy hp, and star point gain
@Function 1C9A0
{
ORI	V0, R0, 0 %negate bump attack bumping
}


%negate the side effect of stopping first strikes from 0 SP enemies
%now you'll get to experience the joys of doubled first strikes :D
@Function 1BC78
{
ORI	V0, R0, 0
}

%Double SP
@Hook 1AB310
{
PUSH	T0, T1, T2, T3, A0
COPY	A0, S3					%Copy amount of SP to add
PUSH	V0						%bad code but :P
JAL		$CurseMultiply
NOP
COPY	S3, V0
POP		V0
%enforce cap V0 == 100
LI		T0, 100`
BLT		S3, T0, .belowcap
NOP
COPY	S3, T0
.belowcap
ADD		V0, V0, S3 				%Add SP 
POP		T0, T1, T2, T3, A0
.nope
J 		8027CA38
SB		V0, 79 (S4) %store star points gained
}
%/

% Should leave Pretty Lucky alone for now, no SP in Sweet Expedition (maybe add later when I make "post-game")
/%
%Pretty Lucky -> Star Gift
%double SP regen

@Function 1A5C28
{
ORI	V0, R0, 0 %negate lucky day damage avoidance
}

@Hook 1726E8
{
PUSH 	RA, S0, S1, A0 %idk, but if we don't then things break
ADDIU	S0, V0, 0 %move V0 to S0 temporarily
JAL     $IsBadgeEquipped %~Func:is_ability_active %800E9D48
ORI		A0, R0, F1 %pretty lucky
SAB		R0, 8010EFAF %^ the normal ability checker function is too messy to use here (changes a lot of registers around and causes problems)
BEQ		A0, R0 .no
ADDIU	V0, S0, 0
ORI 	S1, R0, 1
SAB		S1, 8010EFAF
ADDIU	V0, V0, 20		
.no
ADDIU	V0, V0, 20		%normal SP gain (*each bar is 256 units, you get 32 units per turn, so you get one per 8 turns, or one per 4 turns if doubled)
POP		RA, S0, S1, A0
J		80243E10
SW		V1, 0 (S0) %hooked over
}
%/

% TBH I wanted to make Close Call behave more like one of the Miracle badges... 
	%but I'm going leave this effect as is until I better understand scripting hooks and functions. 
	% I'm just going to have to comment out the checks relating to badges that don't exist -JackitK
%Close Call -> Danger Saver
%-1 FP cost while in danger
/%
This code is more complicated than I thought.  I'll try to reimplement Close Call as Danger Saver
once I take the time to look at the code enough to at least tell apart which parts are actually
tied to the core functions and which ones are tied to additional effects other badges and
abilities have on it....
%/



%Adding new colors
%Problem: Fp text does not use the same system

%Look around 802AD3E0 for colors
%	^	colors of number text

%The normal system
%0 = black (color 0A)
%1 = light blue (color 37)
%neither 0 nor 1 = blue (color 38)

%802A309C = loading the value for determining the color of the FP text
%802A30E8 = loading the value for determining the color of the POW text

%The game loads in different pointers for the different colors (????)



%where are the fp costs stored in memory?
%Around 802AD320 in a list

%Another table around 802AD440 that stores the thing just after FP cost



%reference icon script
/%
#new:Data $IconScript_Heart {
    08 % op_08
    05 03 % SetSize -- 32x32px
    0E 0000B000 % ScaleUniform (fixed point)
    04 % Loop
    02 3C $HeartCI4 $HeartCI4Palette % SetCI
    03 % Restart
    00 % End
}

compare with above
	08
	13	10 08
	04
	02	3C [image pointer] [palette pointer]
	03
	01
%/


%Palette format
%around 800FC2E0
%Uses RGBA format (0-31) (5 bits per color, but alpha gets 1 bit)

%Probably something the GPU uses and so breakpoints can't find what uses this

%Black FP text palette
%(only some of the non-black colors are used)
%FFFE 2949 6B59 8C61 A527 BDED D6B3 0001
%0001 0001 0001 0001 0001 0001 0001 0001

/% % I believe these tie to badges I'm not using, comment out instead of delete just in case...
@Hook 417E2C
{
	%Check if Flower Health is active, if so, skip to 802A311C and load the pointer into A0
	PUSH	A0, A1, A2, T0, T1, T2, T3, RA	 %no clue which internal values the function uses so...
	JAL		800E9D48
	ADDIU 	A0, R0, 11
	BEQ		V0, R0, .noFH
	NOP
	JAL		$HasGreedStone
	NOP	
	SLTI	V0, V0, 1			%1 -> 0, 0 -> 1
	.noFH
	POP		A0, A1, A2, T0, T1, T2, T3, RA	 %no clue which internal values the function uses so...
	PUSH	A0
	JAL		$IsBadgeEquipped
	LI		A0, .Item:FlowerCoins
	BNE		A0, R0, .cointext
	NOP
	POP		A0
	BNE		V0, R0, .hptext
	NOP
	LW		V0, 0 (S4)
	PUSH	V1
	SLTI	V1, V0, 3
	BNE		V1, R0, .hookedover		%if V1 >= 3, set color to 0
	NOP
	ORI		V0, R0, 0
	.hookedover
	POP		V1	
	BEQ		V0, R0, .dobranch
	NOP
	J		802A30A4
	NOP
	.dobranch
	J		802A30B8
	NOP
	.hptext
	LI		A0, $IconScript_HPText
	J		802A311C
	NOP	
	.cointext
	POP		A0
	LI		A0, $IconScript_CoinText
	J		802A311C
	NOP	
}

%Grayed out text
%418A28 --> 802A3C98
%  438:  LA        A1, 801076BC
@Hook 418E60
{
	%Check if Flower Health is active, if so, skip to 802A311C and load the pointer into A0
	PUSH	A0, A1, A2, T0, T1, T2, T3, RA	 %no clue which internal values the function uses so...
	JAL		800E9D48
	ADDIU 	A0, R0, 11
	BEQ		V0, R0, .noFH
	NOP
	JAL		$HasGreedStone
	NOP	
	SLTI	V0, V0, 1			%1 -> 0, 0 -> 1
	.noFH	
	POP		A0, A1, A2, T0, T1, T2, T3, RA	 %no clue which internal values the function uses so...
	%
	PUSH	A0
	JAL		$IsBadgeEquipped
	LI		A0, .Item:FlowerCoins
	BNE		A0, R0, .cointext
	NOP
	POP		A0
	BEQ		V0, R0, .normalend
	NOP
	LA        A1, $IconScript_HPTextDark
	J 		802A40D8
	RESERVED	
	.normalend
	LA        A1, 801076BC
	J 		802A40D8
	RESERVED
	.cointext
	POP		A0
	LA        A1, $IconScript_CoinTextDark
	J 		802A40D8
	RESERVED
}

%/

/% % Tied to Flower Health so comment out for now.... -JackitK
%Value read at 802A308C = value used to check whether to load "FP" or "POW" (but moves you can't use are checked separately)
%	Note that manually setting this will change what the text is but it also causes some text misalignment
%	It will also crash when exiting the menu (probably trying to unload the wrong thing)

%	Note that the text color is also separate

%417A14 --> 802A2C84
%(a function responsible for finding the color/sprite of the FP and POW text)

%802A2C84 + 408
%417A14 + 408
@Hook 417E1C
{
	PUSH	A0, RA
	LUI		V0, 802B
	LW		V0, D4A0 (V0)
	BEQ		V0, R0, .end
	NOP	
	JAL		$IsBadgeEquipped
	ORI		A0, R0, .Item:FlowerHealth
	JAL		$HasGreedStone
	NOP
	BEQ		V0, R0, .noSC
	NOP
	BEQ		A0, R0, .noSC
	NOP
	POP		A0, RA
	LUI		V0, 802B
	LW		V0, D4A0 (V0)		%re-get this value properly
	LA		A0, $IconScript_CoinText
	J		802A30C0		%Jump ahead a bit more to avoid getting a new pointer
	NOP	
	.noSC
	LUI		V0, 802B
	LW		V0, D4A0 (V0)		%re-get this value properly
	JAL		$IsBadgeEquipped		%Stellar flowers
	ORI		A0, R0, 14F
	BEQ		A0, R0, .end
	ORI		V0, R0, 1				%POW text
	POP		A0, RA
	J		802A30B8		%Jump ahead to avoid running the code that replaces FP text with HP text 
	NOP
	.end
	POP		A0, RA
	J	    802A3094
	NOP
}

%hooked over
%	LUI		V0, 802B
%	LW		V0, D4A0 (V0)		

%value == 0 is "FP"
%otherwise it is "POW"

%The other ones loading that value (for loading when you can't use the move
%802A4078		<-- does change what is displayed but causes misalignment again ):
%802A3F70		<-- loading 0 does not seem to do much


%Gray pow text = address 80107778
%	^ never found where this is actually used

%it is here?
% 00418A28 --> 802A3C98
%494:  LA        A1, 8010776C

@Hook 418EBC
{
	PUSH	A0, V0, RA
	JAL		$IsBadgeEquipped
	ORI		A0, R0, .Item:FlowerHealth
	JAL		$HasGreedStone
	NOP
	BEQ		V0, R0, .noSC
	NOP
	BEQ		A0, R0, .noSC
	NOP
	LA		A1, $IconScript_CoinTextDark
	BEQ		R0, R0, .end
	NOP
	.noSC
	JAL		$IsBadgeEquipped		%Stellar flowers
	ORI		A0, R0, 14F
	LA      A1, 8010776C			%Gray pow text
	BEQ		A0, R0, .end
	NOP
	LA      A1, 801076BC			%Gray FP text
	.end
	POP		A0, V0, RA
	J		802A4130
	NOP
}

%/

/% % No Stellar Nova so this shouldn't be needed
#export:Data $StellarNovaBoolean
{
	00000000
}
/%



%Fix which thing blinks
/%

% Deleted hooks I'm 99% sure are tied to Stellar Coins & Flower Coins, badges I don't plan to use...

% Deleted Stelar Nova Code...



%Healthy Healthy -> Perfect Stand

%Remove healthy healthy effect

%Overwrite 8027792C
%but wait! this is in IncreaseMaxHealth.patch!
%Code moved: last stand now occurs after damage (Makes it less ultra OP)
@Function 1A620C
{
	LHU		V1, 1B8 (S3)	%hooked over (Load mario HP)
	ORI		V1, R0, 0	%Reset V1 to 0 (Ignore last stand code)
}

/%
@Hook 1A620C
{
PUSH	V0, S2, T0, T1, T2, T3
DADDU	A0, S3, R0
JAL		802672AC
ADDIU	A1, R0, 37
BEQ		V0, R0, .normalend
NOP
DADDU	A0, S3, R0
JAL		802672AC		%Check last stand too
ADDIU	A1, R0, 20
LHU		V1, 1B8 (S3)	%mario hp
BEQ		V0, R0, .good
NOP
ORI		A1, R0, 6
BLT		V1, A1 .normalend
NOP
.good
LHU		V1, 1B8 (S3)	%mario hp
LB		S2, 3 (T0)		%mario mhp
BNE		V1, S2, .normalend
NOP
SRA		S0, S0, 1		%Half value
.normalend
LHU		V1, 1B8 (S3)	%hooked over (Load mario HP)
POP		V0, S2, T0, T1, T2, T3
J	80277934
SLTI	V1, V1, 6		%Last stand trigger (if hp < 6) (hooked over)
}
%/


/% Keep?
%Spin Attack -> Perfect Saver
%Id 40 / 0x28
%802B60F0
%This function breaks spinning without using Speedy Spin
@Function E25E50
{
ORI		V0, R0, 0
SB		A1, 3 (S3)
}
%/

%try overriding a different one?
%802B60F8
@Function E25E58
{
ORI		V0, R0, 0
}


%8004070C
@Function 1BB0C
{
ORI		V0, R0, 0
NOP
}

%800415F0
@Function 1C9F0
{
ORI		V0, R0, 0
NOP
}

%See above for code



%search for ability checker
%800E9D48


/% % Currently using Chill Out but keep reference to this code just in case I change my mind... -JackitK
%Chill Out (badge) -> Flower Health
%Id 17 / 0x11

%80040868
@Function 1BC68
{
ORI		V0, R0, 0
NOP
}

%80040A48
@Function 1BE48
{
ORI		V0, R0, 0
NOP
}

%80041E44
@Function 1D24C
{
ORI		V0, R0, 0
NOP
}

%802418AC
@Function 17018C
{
ORI		V0, R0, 0
NOP
}

%80263C3C (loading FP to reduce it, also used for partner moves)
@Hook 19251C
{
PUSH	RA, V1	%this is next to a return statement, so it's probably fine to mess with stuff
SAB		R0, $FlowerPowerBool
DADDU	A0, S1, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 17
BEQ		V0, R0, .fhealth	%skip if no badge
NOP
%
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheck
NOP
%with flower coins, check coins
LH			V0, C (S2)
LI			V1, 3E7
BNE			V0, V1, .fhealth
NOP
BEQ			R0, R0, .success
NOP
.noFCCheck
JAL		$HasGreedStone
NOP
BNE		V0, R0, .checkFP
NOP
DADDU	A0, S1, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 11
BEQ		V0, R0, .checkFP	%with FH, load different condition
NOP
.checkHP
LBU		V0, 2 (S2)
LBU		V1, 3 (S2)
BNE		V0, V1, .fhealth
NOP
BEQ		R0, R0, .success
NOP
.checkFP
LBU		V0, 5 (S2)
LBU		V1, 6 (S2)
BNE		V0, V1, .fhealth
NOP
.success
ORI		V0, R0, 1
SAB		V0, $FlowerPowerBool
%now for flower health
.fhealth
%
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheckB
NOP
%with flower coins, check coins
LH			V0, C (S2)
SUBU		V0, V0, S0
SH			V0, C (S2)
BEQ			S0, R0 .noFCCheckB			%for some reason, changing partner makes it go into this code block so I need this
NOP
SAW			R0, $Data_TurnsSinceUsedCoins
BEQ			R0, R0, .end
NOP
.noFCCheckB
%
JAL		$HasGreedStone
NOP
BNE		V0, R0, .original
NOP
DADDU	A0, S1, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 11
BEQ		V0, R0, .original
NOP
LBU		V0, 2 (S2)
SUBU	V0, V0, S0
SB		V0, 2 (S2)
BEQ		R0, R0, .end
NOP
.original
LBU		V0, 5 (S2)
SUBU	V0, V0, S0
SB		V0, 5 (S2)
.end
POP		RA, V1
J 		80263C44
NOP
}

%We need to override 3 lines of code, this one is rewritten above
%SB		V0, 5 (S2)
@Function 192524
{
NOP
}

%80263A94 (loading FP for partner)
@Hook 192374
{
PUSH 		RA, V1
DADDU  		A0, S5, R0
JAL			800E9D48	%the other one doesn't really work here ):
%JAL			802672AC	%weird ability checker code
ADDIU 		A0, R0, 11
BEQ			V0, R0, .noFH
NOP
JAL			$HasGreedStone
NOP	
SLTI		V0, V0, 1			%1 -> 0, 0 -> 1
.noFH
%
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheckB
NOP
LH			V0, C (FP)
SLT			V0, V0, S0
BEQ			R0, R0, .end
NOP
.noFCCheckB
%
BEQ			V0, R0, .original
NOP
LB			V0, 2 (FP)
ADDI		V0, V0, FFFF									%Act like you have 1 hp less than you really do in order to prevent killing yourself
SLT			V0, V0, S0
BEQ			R0, R0, .end
NOP
.original
LB			V0, 5 (FP)
SLT			V0, V0, S0
.end
POP			RA, V1
J			80263A9C
NOP
}


%80263888 (loading FP for mario hammer) + switching to mario
@Hook 192168
{
PUSH 		RA, V1
%check flower power
SAB			R0, $FlowerPowerBool
DADDU		A0, S5, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 17

BEQ			V0, R0, .fhealth	%skip if no badge
NOP
DADDU		A0, S5, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 11
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheckA
NOP
LHU			V0, C (S7)
LI			V1, 999`
BEQ			V0, V1, .success
NOP
BEQ			R0, R0, .fhealth
NOP
.noFCCheckA
JAL			$HasGreedStone
NOP
BNE			V0, R0, .checkFP
NOP
BEQ			V0, R0, .checkFP	%with FH, load different condition
NOP
.checkHP
LBU			V0, 2 (S7)
LBU			V1, 3 (S7)
BNE			V0, V1, .fhealth
NOP
BEQ			R0, R0, .success
NOP
.checkFP
LBU			V0, 5 (S7)
LBU			V1, 6 (S7)
BNE			V0, V1, .fhealth
NOP
.success
ORI			V0, R0, 1
SAB			V0, $FlowerPowerBool
.fhealth
%
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheckB
NOP
%with flower coins, check coins
LH			V0, C (S7)
SLT			V0, V0, S0
BEQ			R0, R0, .end
NOP
.noFCCheckB
%
JAL			$HasGreedStone
NOP
BNE			V0, R0, .original
NOP
DADDU  		A0, S5, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 11
BEQ			V0, R0, .original
NOP
LB			V0, 2 (S7)
ADDI		V0, V0, FFFF									%Act like you have 1 hp less than you really do in order to prevent killing yourself
SLT			V0, V0, S0
BEQ			R0, R0, .end
NOP
.original
LB			V0, 5 (S7)
SLT			V0, V0, S0
.end
POP			RA, V1
J			80263890
NOP
}

%80263658 (loading FP for mario jump) + switching to mario
@Hook 191F38
{
PUSH 		RA, V1
%check flower power
SAB			R0, $FlowerPowerBool
DADDU		A0, S5, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 17
BEQ			V0, R0, .fhealth	%skip if no badge
NOP
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheck
NOP
%with flower coins, check coins
LH			V0, C (S7)
LI			V1, 3E7
BNE			V0, V1, .fhealth
NOP
BEQ			R0, R0, .success
NOP
.noFCCheck
JAL			$HasGreedStone
NOP
BNE			V0, R0, .checkFP
NOP
DADDU		A0, S5, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 11
BEQ			V0, R0, .checkFP	%with FH, load different condition
NOP
.checkHP
LBU			V0, 2 (S7)
LBU			V1, 3 (S7)
BNE			V0, V1, .fhealth
NOP
BEQ			R0, R0, .success
NOP
.checkFP
LBU			V0, 5 (S7)
LBU			V1, 6 (S7)
BNE			V0, V1, .fhealth
NOP
.success
ORI			V0, R0, 1
SAB			V0, $FlowerPowerBool
.fhealth
%
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheckB
NOP
%with flower coins, check coins
LH			V0, C (S7)
SLT			V0, V0, S0
BEQ			R0, R0, .end
NOP
.noFCCheckB
%
JAL			$HasGreedStone
NOP
BNE			V0, R0, .original
NOP
DADDU  		A0, S5, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 11
BEQ			V0, R0, .original
NOP
LB			V0, 2 (S7)
ADDI		V0, V0, FFFF									%Act like you have 1 hp less than you really do in order to prevent killing yourself
SLT			V0, V0, S0
BEQ			R0, R0, .end
NOP
.original
LB			V0, 5 (S7)
SLT			V0, V0, S0
.end
POP			RA, V1
J			80263660
NOP
}

%802A6428 (loading FP for double dip / triple dip)

@Hook 41B1B8 %1D4D08
{
PUSH 		RA, S0, A0, A1, A2, A3, T0, T1, T2, T3 %well it stopped throwing errors so its fine
%check flower power
SAB			R0, $FlowerPowerBool
DADDU		A0, S7, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 17

BEQ			V0, R0, .fhealth	%skip if no badge
NOP
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheck
NOP
%with flower coins, check coins
LHU			V0, C (S7)
LI			V1, 3E7
BNE			V0, V1, .fhealth
NOP
BEQ			R0, R0, .success
NOP
.noFCCheck
JAL			$HasGreedStone
NOP
BNE			V0, R0, .checkFP
NOP
DADDU		A0, S7, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 11
BEQ			V0, R0, .checkFP	%with FH, load different condition
NOP
.checkHP
LBU			V0, 2 (S7)
LBU			V1, 3 (S7)
BNE			V0, V1, .fhealth
NOP
BEQ			R0, R0, .success
NOP
.checkFP
LBU			V0, 5 (S7)
LBU			V1, 6 (S7)
BNE			V0, V1, .fhealth
NOP
.success
ORI			V0, R0, 1
SAB			V0, $FlowerPowerBool
.fhealth
%
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFCCheckB
NOP
%with flower coins, check coins
LH			V0, C (S5)
LB			V1, 11 (S2)
BEQ			R0, R0, .foundcost
NOP
.noFCCheckB
%
JAL			$HasGreedStone
NOP
BNE			V0, R0, .original
NOP
DADDU  		A0, S7, R0
JAL			802672AC	%weird ability checker code
ADDIU 		A1, R0, 11
BEQ			V0, R0, .original
NOP
LB			V0, 2 (S5)										%load hp also
ADDI		V0, V0, FFFF									%Act like you have 1 hp less than you really do in order to prevent killing yourself
LB			V1, 11 (S2)
BEQ			R0, R0, .foundcost
NOP
.original
LB			V0, 5 (S5)
LB			V1, 11 (S2)
.foundcost
%V1 = cost of Double/Triple dip
%Now its time to copy all the ability code
%
COPY	S0, V1
%
%Eternal cost increases
LI		A0, $EternalCostIncreases
LB		A1, 0 (A0)						%strength
BEQ		A1, R0, .noEternal
NOP
LB		A1, 0 (A0)						%strength
ADDU 	S0, S0, A1 
.noEternal
%Actually check the other abilities
DADDU  	A0, S7, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 18
BEQ		V0, R0 .noFlowerSaver
NOP
SUBU 	S0, S0, V0
.noFlowerSaver
DADDU  	A0, S7, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 26
BEQ		V0, R0 .noFlowerFanatic
NOP
SUBU 	S0, S0, V0
SUBU 	S0, S0, V0
.noFlowerFanatic
%
LIO		AT, 8010F290
LB		AT, 2 (AT)
SLTI	AT, AT, 2`
BEQ		AT, R0, .noMS
NOP
JAL		$IsBadgeEquipped		%Mega saver
ORI		A0, R0, 153
BEQ		A0, R0 .noMS
NOP
ORI		A0, R0, 3
SUBU 	S0, S0, A0
BEQ		R0, R0, .noDS
NOP
.noMS
LIO		AT, 8010F290
LB		AT, 2 (AT)
SLTI	AT, AT, 6`
BEQ		AT, R0, .noDS
NOP
DADDU  	A0, S7, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 21
SUBU 	S0, S0, V0 
.noDS
LIO		AT, 8010F290
LB		A0, 3 (AT)
LB		AT, 2 (AT)
SLT		AT, AT, A0
BNE		AT, R0, .noPS
NOP
DADDU  	A0, S7, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 28
SUBU 	S0, S0, V0 
.noPS
%if flower coins, skip the FH and FB code
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noFC
NOP
BEQ		R0, R0, .noFB
NOP
.noFC
JAL		$HasGreedStone
NOP
BNE		V0, R0, .noFH
NOP
DADDU  	A0, S7, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 11
SUBU 	S0, S0, V0					%Do not not do this
BNE		V0, R0, .checkHP2
NOP
.noFH
.checkFP2
LIO		AT, 8010F290
LB		A0, 5 (AT)
LB		AT, 6 (AT)
SLT		AT, A0, AT
BNE		AT, R0, .noFB
NOP
BEQ		R0, R0, .checkFB
NOP
.checkHP2
LIO		AT, 8010F290
LB		A0, 2 (AT)
LB		AT, 3 (AT)
SLT		AT, A0, AT
BNE		AT, R0, .noFB
NOP
.checkFB
DADDU  	A0, S7, R0
JAL		802672AC	%weird ability checker code
ADDIU 	A1, R0, 2E
ADDIU	A0, V0, 0
ADD		A0, A0, V0
ADD		A0, A0, V0
DADDU	V0, A0, R0
SUBU 	S0, S0, V0 
.noFB
%dark saver
JAL		$IsBadgeEquipped		%Dark saver
ORI		A0, R0, 142
BEQ		A0, R0 .noDarkS
NOP
COPY	V0, A0
SUBU 	S0, S0, V0 
.noDarkS
%Item boosts (I think these should be last)
LI		A0, $ItemCostReductionData
LB		A1, 1 (A0)						%count
BEQ		A1, R0, .noItem
NOP
LB		V0, 0 (A0)						%strength
SUBU 	S0, S0, V0 
.noItem
%Enforce cost floor
SLTI	V0, S0, 1`
BEQ		V0, R0, .nofloor
NOP
LI		S0, 1`
.nofloor
%Second flower coins code block
%Multiply everything by 10
%Then use SLLV if greed stone
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noflowercoinsB
NOP
JAL		$HasGreedStone
NOP
BEQ		V0, R0, .nogreedstone
NOP
LAW		A0, $Data_TurnsSinceUsedCoins
SUB		A0, R0, A0
ADDI	A0, A0, 7`		%2 ^ 6 = 64
BLT		A0, R0, .nogreedstone	%not sure if SLLV works with negative values
NOP
SLLV	S0, S0, A0
.nogreedstone
%Now multiply by 5
%I can probably use T0 and T1 since there are some messy functions above
SLL		T0, S0, 2		%*4
COPY	T1, S0
ADD		S0, T0, T1
.noflowercoinsB
%Good
%wait!!! load HP or coins if needed
LB			V0, 5 (S5)
COPY		V1, S0
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerHealth
BEQ		A0, R0, .noflowerhealth
NOP
COPY	AT, V0
JAL		$HasGreedStone
NOP
BNE		V0, R0, .noflowerhealth
COPY	V0, AT
LB			V0, 2 (S5)
ADDI		V0, V0, FFFF									%Act like you have 1 hp less than you really do in order to prevent killing yourself
.noflowerhealth
JAL		$IsBadgeEquipped
LI		A0, .Item:FlowerCoins
BEQ		A0, R0, .noflowercoinsC
NOP
LH		V0, C (S5)
.noflowercoinsC
%
POP			RA, S0, A0, A1, A2, A3, T0, T1, T2, T3
J			802A6430
NOP
}
%/

%See above for more code




%Other programming is done on TurnScript.bpat



%Make dizzy attack not useless anymore %Not sure what this does, but let's leave it in just in case it's real good -JackitK
/%
@Function 190698
{
	LI        A3, 2
}